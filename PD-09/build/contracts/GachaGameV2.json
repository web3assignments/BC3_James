{
  "contractName": "GachaGameV2",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "Name",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "Value",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct GachaGameV2.Card",
          "name": "card",
          "type": "tuple"
        }
      ],
      "name": "Pull",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "queryId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "getAllPulledCards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "Name",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "Value",
              "type": "uint8"
            }
          ],
          "internalType": "struct GachaGameV2.Card[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "pull",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"Value\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct GachaGameV2.Card\",\"name\":\"card\",\"type\":\"tuple\"}],\"name\":\"Pull\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPulledCards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"Value\",\"type\":\"uint8\"}],\"internalType\":\"struct GachaGameV2.Card[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"James\",\"kind\":\"dev\",\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings.\"},\"checkBalance()\":{\"returns\":{\"_0\":\"A value which represent the balance of the account\"}},\"getAllPulledCards()\":{\"details\":\"Could change to a mapping to return the cards originating from the current user.\",\"returns\":{\"_0\":\"a list of cards\"}}},\"title\":\"A game to get cards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkBalance()\":{\"notice\":\"Check the current funds of the current account.\"},\"getAllPulledCards()\":{\"notice\":\"Get all cards that were pulled during the contracts lifetime\"},\"pay()\":{\"notice\":\"Add funds to the account\"},\"pull()\":{\"notice\":\"Retrieve cards\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/james/Desktop/TruffleTest/contracts/GameV2.sol\":\"GachaGameV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/james/Desktop/TruffleTest/contracts/GameV2.sol\":{\"keccak256\":\"0x5c658bb9c344c659fb13836e96aa54755fff3f9762d213b690397ca156f1ddc4\",\"urls\":[\"bzz-raw://cf2e0bd091780377894488ed117a116486d6c1f4e0183e630ca1777b96961e91\",\"dweb:/ipfs/QmYxJXWG493TPJf3mBU2W3ukAe13r7asjR2Nf1N9XgDSDy\"]},\"/C/Users/james/Desktop/TruffleTest/contracts/Initializable.sol\":{\"keccak256\":\"0xc4b13d228bb8c6f94b290f63e3f30ade9c8e3133993ccb495562e6fa93fe544c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ad25aadf8a2338164f32253b56f370c63aee3780b0d82d661801d7f9a0e52ec\",\"dweb:/ipfs/QmP2oai5MtygQKntM5Xs9Wvk3ND3rBRWartDZsVwjnSuX3\"]},\"/C/Users/james/Desktop/TruffleTest/contracts/ProvableAPI_0.6.sol\":{\"keccak256\":\"0x0679b11438307035fedfa25cbad956a46261b75dccbd4bb347d418d0348b3acd\",\"urls\":[\"bzz-raw://5bba4d353120ebdb74bd7b00c724fbfa6c48a7a8242dc5d2c2159524d9624cb3\",\"dweb:/ipfs/QmbWkyApJGp9Viooq8S9EYtMXXVVeD6Kq4AZpmJNcwNgd7\"]},\"/C/Users/james/Desktop/TruffleTest/contracts/SafeMath.sol\":{\"keccak256\":\"0x03e8ca0e478ad13a646ac950c1095903f565abf6914d9608f665b269a8239efe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80fd7627b7524a434297757209861ccdc270473e6889b77a628e4aa0d6dcc76\",\"dweb:/ipfs/QmbbjLMnnLisxuJaPxoRJ8zSoQACk7dErtPKWWQ5Grkg66\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614c0b806100206000396000f3fe60806040526004361061007b5760003560e01c806338bbfa501161004e57806338bbfa50146100e85780633f1be4d4146101115780638129fc1c1461013c578063c71daccb146101465761007b565b80631b9265b81461008057806327dc297e1461008a5780632eef3348146100b3578063329eb839146100de575b600080fd5b610088610171565b005b34801561009657600080fd5b506100b160048036038101906100ac9190613ee1565b610290565b005b3480156100bf57600080fd5b506100c86102ea565b6040516100d59190614702565b60405180910390f35b6100e6610408565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190613f35565b61074d565b005b34801561011d57600080fd5b506101266107e4565b604051610133919061473f565b60405180910390f35b6101446107ea565b005b34801561015257600080fd5b5061015b6108ec565b60405161016891906148e1565b60405180910390f35b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff163410156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c99061483f565b60405180910390fd5b61024b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff1634816101fc57fe5b04600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093390919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6102e68282600067ffffffffffffffff811180156102ad57600080fd5b506040519080825280601f01601f1916602001820160405280156102e05781602001600182028036833780820191505090505b5061074d565b5050565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156103ff5783829060005260206000209060020201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff16815250508152602001906001019061030e565b50505050905090565b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16341015610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104609061483f565b60405180910390fd5b600166038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16348161049257fe5b0410156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb9061485f565b60405180910390fd5b600a66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff1634816104fd57fe5b04111561053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105369061489f565b60405180910390fd5b6105b866038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16348161056957fe5b04600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093390919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600160ff16811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d9061481f565b60405180910390fd5b6106d881600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098890919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b81811015610749576107366000600162030d406109d2565b600981905550808060010191505061071e565b5050565b610755610eb6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078c57600080fd5b60006107998484846111ca565b60ff1614156107df576107de60c8836040516020016107b89190614684565b6040516020818303038152906040528051906020012060001c816107d857fe5b066112fa565b5b505050565b60095481565b600560019054906101000a900460ff1680610809575061080861155f565b5b806108215750600560009054906101000a900460ff16155b610860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108579061487f565b60405180910390fd5b6000600560019054906101000a900460ff1615905080156108b2576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b6108bf603060f81b611576565b6108c7611872565b80156108e9576000600560016101000a81548160ff0219169083151502179055505b50565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008082840190508381101561097e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610975906147ff565b60405180910390fd5b8091505092915050565b60006109ca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a75565b905092915050565b600080831180156109e4575060208311155b6109ed57600080fd5b600a840293506060600167ffffffffffffffff81118015610a0d57600080fd5b506040519080825280601f01601f191660200182016040528015610a405781602001600182028036833780820191505090505b5090508360f81b81600081518110610a5457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610a9d57600080fd5b506040519080825280601f01601f191660200182016040528015610ad05781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610aed57600080fd5b506040519080825280601f01601f191660200182016040528015610b205781602001600182028036833780820191505090505b5090506000610b2d611ad0565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610b6557600080fd5b506040519080825280601f01601f191660200182016040528015610b985781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610bbb57600080fd5b506040519080825280601f01601f191660200182016040528015610bee5781602001600182028036833780820191505090505b509050610c018260186008846000611de2565b50610c0a613c2e565b60405180608001604052808781526020018881526020018681526020018481525090506000610c6f6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e41565b90506060600867ffffffffffffffff81118015610c8b57600080fd5b506040519080825280601f01601f191660200182016040528015610cbe5781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350610ea3828285600160048110610dfd57fe5b6020020151600287600060048110610e1157fe5b6020020151604051610e239190614603565b602060405180830381855afa158015610e40573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e639190613eb8565b87600260048110610e7057fe5b6020020151604051602001610e889493929190614642565b604051602081830303815290604052805190602001206121be565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f3e57506000610f3c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15610f4f57610f4d60006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610fb957600080fd5b505af1158015610fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff19190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461112557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561118d57600080fd5b505af11580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190613e8f565b905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106111fa57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158061128d57507f50000000000000000000000000000000000000000000000000000000000000008260018151811061125d57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b806112b95750600160ff16826002815181106112a557fe5b602001015160f81c60f81b60f81c60ff1614155b156112c757600190506112f3565b60006112dc8386866112d76121f6565b612298565b9050806112ed5760029150506112f3565b60009150505b9392505050565b60198111156113a75760066007604051611313906146d8565b9081526020016040518091039020908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201816000019080546001816001161561010002031660029004611371929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff1602179055505050611503565b600581101580156113b9575060198111155b1561146257600660076040516113ce906146ed565b908152602001604051809103902090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820181600001908054600181600116156101000203166002900461142c929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff1602179055505050611502565b60066007604051611472906146c3565b90815260200160405180910390209080600181540180825580915050600190039060005260206000209060020201600090919091909150600082018160000190805460018160011615610100020316600290046114d0929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff16021790555050505b5b7f6ee21981be617443567eeac157be22928d3cfa41c453eb6c666eff8cd650fa4f60066001600680549050038154811061153957fe5b906000526020600020906002020160405161155491906148bf565b60405180910390a150565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806115fd575060006115fb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b1561160e5761160c60006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561167857600080fd5b505af115801561168c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b09190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117e457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561176c57600080fd5b505af1158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a49190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040161183d9190614724565b600060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b5050505050565b60405180604001604052806040518060400160405280600481526020017f52617265000000000000000000000000000000000000000000000000000000008152508152602001600160ff1681525060076040516118ce906146d8565b908152602001604051809103902060008201518160000190805190602001906118f8929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff16021790555090505060405180604001604052806040518060400160405280600a81526020017f53757065722052617265000000000000000000000000000000000000000000008152508152602001600360ff168152506007604051611979906146ed565b908152602001604051809103902060008201518160000190805190602001906119a3929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff16021790555090505060405180604001604052806040518060400160405280600a81526020017f556c7472612052617265000000000000000000000000000000000000000000008152508152602001600a60ff168152506007604051611a24906146c3565b90815260200160405180910390206000820151816000019080519060200190611a4e929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff160217905550905050565b6000838311158290611abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab491906147ad565b60405180910390fd5b5060008385039050809150509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b5857506000611b56600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15611b6957611b6760006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bd357600080fd5b505af1158015611be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0b9190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d3f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cc757600080fd5b505af1158015611cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cff9190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da557600080fd5b505afa158015611db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddd9190613eb8565b905090565b6060600082850190508084511015611df957600080fd5b600086602001905060008460200190505b868860200101821015611e325781890151808288015250602082019150602081019050611e0a565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ec957506000611ec7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15611eda57611ed860006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f4457600080fd5b505af1158015611f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7c9190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120b057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561203857600080fd5b505af115801561204c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120709190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff811180156120ca57600080fd5b506040519080825280602002602001820160405280156120fe57816020015b60608152602001906001900390816120e95790505b5090508360006004811061210e57fe5b60200201518160008151811061212057fe5b60200260200101819052508360016004811061213857fe5b60200201518160018151811061214a57fe5b60200260200101819052508360026004811061216257fe5b60200201518160028151811061217457fe5b60200260200101819052508360036004811061218c57fe5b60200201518160038151811061219e57fe5b60200260200101819052506121b48582856127dd565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000813b9050919050565b60006121ef612bea565b9050919050565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561228e5780601f106122635761010080835404028352916020019161228e565b820191906000526020600020905b81548152906001019060200180831161227157829003601f168201915b5050505050905090565b60008060206002876045815181106122ac57fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff811180156122de57600080fd5b506040519080825280601f01601f1916602001820160405280156123115781602001600182028036833780820191505090505b50905061232387836020846000611de2565b506002848760405160200161233992919061469b565b6040516020818303038152906040526040516123559190614603565b602060405180830381855afa158015612372573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906123959190613eb8565b6040516020016123a591906145e8565b604051602081830303815290604052805190602001208180519060200120146123d3576000925050506127d5565b606060028860016049860101815181106123e957fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561241157600080fd5b506040519080825280601f01601f1916602001820160405280156124445781602001600182028036833780820191505090505b50905061245988604985018351846000611de2565b506124d660028260405161246d9190614603565b602060405180830381855afa15801561248a573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906124ad9190613eb8565b878a60086020880101815181106124c057fe5b602001015160f81c60f81b60f81c60ff16613141565b6124e657600093505050506127d5565b6060602967ffffffffffffffff8111801561250057600080fd5b506040519080825280601f01601f1916602001820160405280156125335781602001600182028036833780820191505090505b50905061254889602086016029846000611de2565b506060604067ffffffffffffffff8111801561256357600080fd5b506040519080825280601f01601f1916602001820160405280156125965781602001600182028036833780820191505090505b50905060006041845160296020890101010190506125bc8b604083036040856000611de2565b5060006002836040516125cf9190614603565b602060405180830381855afa1580156125ec573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061260f9190613eb8565b9050838160405160200161262492919061461a565b60405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561267057600360008c815260200190815260200160002060009055612680565b60009750505050505050506127d5565b6060604967ffffffffffffffff8111801561269a57600080fd5b506040519080825280601f01601f1916602001820160405280156126cd5781602001600182028036833780820191505090505b5090506126df8d896049846000611de2565b5061273a6002826040516126f39190614603565b602060405180830381855afa158015612710573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127339190613eb8565b87866131ee565b61274f576000985050505050505050506127d5565b6004600083815260200190815260200160002060009054906101000a900460ff166127a95761277e8d846133da565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061286557506000612863600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b156128765761287460006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156128e057600080fd5b505af11580156128f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129189190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612a4c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156129d457600080fd5b505af11580156129e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0c9190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b8152600401612aaa9291906147cf565b602060405180830381600087803b158015612ac457600080fd5b505af1158015612ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612afc9190613fb4565b9050823a02670de0b6b3a764000001811115612b1e576000801b915050612be3565b6060612b29856137ca565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401612b8c949392919061475a565b6020604051808303818588803b158015612ba557600080fd5b505af1158015612bb9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612bde9190613eb8565b925050505b9392505050565b600080612c0a731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6121da565b1115612cac57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ca36040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612ccb73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16121da565b1115612d6d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d646040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612d8c73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6121da565b1115612e2e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612e256040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612e4d73146500cfd35b22e4a392fe0adc06de1a1368ed486121da565b1115612eef5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ee66040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612f0e73a2998efd205fb9d4b4963afb70778d6354ad3a416121da565b1115612fb05773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fa76040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612fcf736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756121da565b111561303357736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b60006130527320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6121da565b11156130b6577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b60006130d57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6121da565b1115613139577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b600090505b90565b600080600190508284511461315557600080fd5b60005b838110156131e25784818151811061316c57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106131a557fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146131d557600091505b8080600101915050613158565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561321057600080fd5b506040519080825280601f01601f1916602001820160405280156132435781602001600182028036833780820191505090505b509050600060208960038151811061325757fe5b602001015160f81c60f81b60f81c60ff1603600401905061327d89826020856000611de2565b91506060602067ffffffffffffffff8111801561329957600080fd5b506040519080825280601f01601f1916602001820160405280156132cc5781602001600182028036833780820191505090505b5090506022820191506133088a60208c60018603815181106132ea57fe5b602001015160f81c60f81b60f81c60ff160384016020846000611de2565b905060208301519450602081015193506133258b601b8787613861565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16141561337b5760019750505050505050506133d3565b6133888b601c8787613861565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106133f057fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561341857600080fd5b506040519080825280601f01601f19166020018201604052801561344b5781602001600182028036833780820191505090505b50905061345d85858351846000611de2565b506060604067ffffffffffffffff8111801561347857600080fd5b506040519080825280601f01601f1916602001820160405280156134ab5781602001600182028036833780820191505090505b5090506134be8660046040846000611de2565b506060606267ffffffffffffffff811180156134d957600080fd5b506040519080825280601f01601f19166020018201604052801561350c5781602001600182028036833780820191505090505b509050600160f81b8160008151811061352157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061356287604188036041846001611de2565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c81525090506135ad8160006020856042611de2565b506136086002836040516135c19190614603565b602060405180830381855afa1580156135de573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906136019190613eb8565b85856131ee565b94508461361d576000955050505050506137c4565b6060604051806060016040528060408152602001614b966040913990506060604267ffffffffffffffff8111801561365457600080fd5b506040519080825280601f01601f1916602001820160405280156136875781602001600182028036833780820191505090505b50905060fe60f81b8160008151811061369c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506136db8a60036041846001611de2565b50606060028b6045815181106136ed57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561371557600080fd5b506040519080825280601f01601f1916602001820160405280156137485781602001600182028036833780820191505090505b50905061375b8b60448351846000611de2565b506137b660028360405161376f9190614603565b602060405180830381855afa15801561378c573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906137af9190613eb8565b82856131ee565b975087985050505050505050505b92915050565b60606137d46138a5565b6137dc613d5c565b6137e8816104006138b1565b6137f1816138fb565b60005b83518110156138305761382384828151811061380c57fe5b60200260200101518361390990919063ffffffff16565b80806001019150506137f4565b5061383a8161392e565b8060000151915050919050565b806002908051906020019061385d929190613cdc565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b60405180590338823950565b60008190506000602082816138c257fe5b06146138db57602081816138d257fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61390681600461393c565b50565b613916826002835161395d565b6139298183613a9d90919063ffffffff16565b505050565b61393981600761393c565b50565b613959601f60058360ff16901b1783613b4890919063ffffffff16565b5050565b60178111613989576139848160058460ff16901b60ff161784613b4890919063ffffffff16565b613a98565b60ff81116139ca576139ae601860058460ff16901b1784613b4890919063ffffffff16565b6139c481600185613b889092919063ffffffff16565b50613a97565b61ffff8111613a0c576139f0601960058460ff16901b1784613b4890919063ffffffff16565b613a0681600285613b889092919063ffffffff16565b50613a96565b63ffffffff8111613a5057613a34601a60058460ff16901b1784613b4890919063ffffffff16565b613a4a81600485613b889092919063ffffffff16565b50613a95565b67ffffffffffffffff8111613a9457613a7c601b60058460ff16901b1784613b4890919063ffffffff16565b613a9281600885613b889092919063ffffffff16565b505b5b5b5b5b505050565b613aa5613d5c565b82602001518360000151518351011115613ad557613ad4836002613ace86602001518651613bef565b02613c0b565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110613b1c5781518352602083019250602082019150602081039050613af9565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613b6e57613b6d826002846020015102613c0b565b5b815180516020818301018381536001820183525050505050565b613b90613d5c565b836020015184600001515183011115613bbe57613bbd846002613bb7876020015186613bef565b02613c0b565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115613c0157829050613c05565b8190505b92915050565b606082600001519050613c1e83836138b1565b613c288382613a9d565b50505050565b60405180608001604052806004905b6060815260200190600190039081613c3d5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613c8e5780548555613ccb565b82800160010185558215613ccb57600052602060002091601f016020900482015b82811115613cca578254825591600101919060010190613caf565b5b509050613cd89190613d76565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d1d57805160ff1916838001178555613d4b565b82800160010185558215613d4b579182015b82811115613d4a578251825591602001919060010190613d2f565b5b509050613d589190613d76565b5090565b604051806040016040528060608152602001600081525090565b5b80821115613d8f576000816000905550600101613d77565b5090565b600081519050613da281614b50565b92915050565b600081359050613db781614b67565b92915050565b600081519050613dcc81614b67565b92915050565b600082601f830112613de357600080fd5b8135613df6613df182614929565b6148fc565b91508082526020830160208301858383011115613e1257600080fd5b613e1d838284614acc565b50505092915050565b600082601f830112613e3757600080fd5b8135613e4a613e4582614955565b6148fc565b91508082526020830160208301858383011115613e6657600080fd5b613e71838284614acc565b50505092915050565b600081519050613e8981614b7e565b92915050565b600060208284031215613ea157600080fd5b6000613eaf84828501613d93565b91505092915050565b600060208284031215613eca57600080fd5b6000613ed884828501613dbd565b91505092915050565b60008060408385031215613ef457600080fd5b6000613f0285828601613da8565b925050602083013567ffffffffffffffff811115613f1f57600080fd5b613f2b85828601613e26565b9150509250929050565b600080600060608486031215613f4a57600080fd5b6000613f5886828701613da8565b935050602084013567ffffffffffffffff811115613f7557600080fd5b613f8186828701613e26565b925050604084013567ffffffffffffffff811115613f9e57600080fd5b613faa86828701613dd2565b9150509250925092565b600060208284031215613fc657600080fd5b6000613fd484828501613e7a565b91505092915050565b6000613fe98383614544565b905092915050565b6000613ffc826149a6565b61400681856149d4565b93508360208202850161401885614981565b8060005b8581101561405457848403895281516140358582613fdd565b9450614040836149c7565b925060208a0199505060018101905061401c565b50829750879550505050505092915050565b61406f81614a4d565b82525050565b61407e81614a79565b82525050565b61409561409082614a79565b614b28565b82525050565b60006140a6826149b1565b6140b081856149e5565b93506140c0818560208601614adb565b6140c981614b32565b840191505092915050565b60006140df826149b1565b6140e981856149f6565b93506140f9818560208601614adb565b80840191505092915050565b61410e81614aba565b82525050565b600061411f826149bc565b6141298185614a01565b9350614139818560208601614adb565b61414281614b32565b840191505092915050565b6000614158826149bc565b6141628185614a12565b9350614172818560208601614adb565b61417b81614b32565b840191505092915050565b6000614191826149bc565b61419b8185614a23565b93506141ab818560208601614adb565b80840191505092915050565b6000815460018116600081146141d457600181146141fa5761423e565b607f60028304166141e58187614a01565b955060ff19831686526020860193505061423e565b600282046142088187614a01565b955061421385614991565b60005b8281101561423557815481890152600182019150602081019050614216565b80880195505050505b505092915050565b6000614253601b83614a12565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000614293602483614a12565b91507f596f75206e65656420746f2070756c6c2061206d696e696d756d206f6620312060008301527f74696d65000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006142f9602683614a12565b91507f302e30303120457468657220697320746865206d696e696d756d20726571756960008301527f72656d656e7400000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061435f602583614a12565b91507f596f7520646f206e6f74206861766520656e6f7567682066756e647320746f2060008301527f70756c6c210000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143c5600a83614a23565b91507f556c7472612052617265000000000000000000000000000000000000000000006000830152600a82019050919050565b6000614405602e83614a12565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061446b603f83614a12565b91507f596f7520617265206e6f7420616c6c6f77656420746f2070756c6c206d6f726560008301527f207468616e2031302074696d657320696e20612073696e676c65207475726e006020830152604082019050919050565b60006144d1600483614a23565b91507f52617265000000000000000000000000000000000000000000000000000000006000830152600482019050919050565b6000614511600a83614a23565b91507f53757065722052617265000000000000000000000000000000000000000000006000830152600a82019050919050565b600060408301600083015184820360008601526145618282614114565b915050602083015161457660208601826145d9565b508091505092915050565b6000604083016000808401858303600087015261459e83826141b7565b925050600184015490506145b181614b0e565b6145be60208701826145d9565b50819250505092915050565b6145d381614aa3565b82525050565b6145e281614aad565b82525050565b60006145f48284614084565b60208201915081905092915050565b600061460f82846140d4565b915081905092915050565b600061462682856140d4565b91506146328284614084565b6020820191508190509392505050565b600061464e82876140d4565b915061465a82866140d4565b91506146668285614084565b60208201915061467682846140d4565b915081905095945050505050565b60006146908284614186565b915081905092915050565b60006146a78285614186565b91506146b38284614084565b6020820191508190509392505050565b60006146ce826143b8565b9150819050919050565b60006146e3826144c4565b9150819050919050565b60006146f882614504565b9150819050919050565b6000602082019050818103600083015261471c8184613ff1565b905092915050565b60006020820190506147396000830184614066565b92915050565b60006020820190506147546000830184614075565b92915050565b600060808201905061476f6000830187614105565b8181036020830152614781818661414d565b90508181036040830152614795818561409b565b90506147a460608301846145ca565b95945050505050565b600060208201905081810360008301526147c7818461414d565b905092915050565b600060408201905081810360008301526147e9818561414d565b90506147f860208301846145ca565b9392505050565b6000602082019050818103600083015261481881614246565b9050919050565b6000602082019050818103600083015261483881614286565b9050919050565b60006020820190508181036000830152614858816142ec565b9050919050565b6000602082019050818103600083015261487881614352565b9050919050565b60006020820190508181036000830152614898816143f8565b9050919050565b600060208201905081810360008301526148b88161445e565b9050919050565b600060208201905081810360008301526148d98184614581565b905092915050565b60006020820190506148f660008301846145ca565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561491f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561494057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561496c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600060ff82169050919050565b6000614a4682614a83565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000614ac582614aa3565b9050919050565b82818337600083830152505050565b60005b83811015614af9578082015181840152602081019050614ade565b83811115614b08576000848401525b50505050565b6000614b21614b1c83614b43565b614a2e565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b614b5981614a3b565b8114614b6457600080fd5b50565b614b7081614a79565b8114614b7b57600080fd5b50565b614b8781614aa3565b8114614b9257600080fd5b5056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212200f3b9891fc9e62d5a45378103f4c71166921422bbdb9603f5408f1ed44c436d764736f6c634300060c0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c806338bbfa501161004e57806338bbfa50146100e85780633f1be4d4146101115780638129fc1c1461013c578063c71daccb146101465761007b565b80631b9265b81461008057806327dc297e1461008a5780632eef3348146100b3578063329eb839146100de575b600080fd5b610088610171565b005b34801561009657600080fd5b506100b160048036038101906100ac9190613ee1565b610290565b005b3480156100bf57600080fd5b506100c86102ea565b6040516100d59190614702565b60405180910390f35b6100e6610408565b005b3480156100f457600080fd5b5061010f600480360381019061010a9190613f35565b61074d565b005b34801561011d57600080fd5b506101266107e4565b604051610133919061473f565b60405180910390f35b6101446107ea565b005b34801561015257600080fd5b5061015b6108ec565b60405161016891906148e1565b60405180910390f35b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff163410156101d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c99061483f565b60405180910390fd5b61024b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff1634816101fc57fe5b04600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093390919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6102e68282600067ffffffffffffffff811180156102ad57600080fd5b506040519080825280601f01601f1916602001820160405280156102e05781602001600182028036833780820191505090505b5061074d565b5050565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156103ff5783829060005260206000209060020201604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff16815250508152602001906001019061030e565b50505050905090565b66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16341015610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104609061483f565b60405180910390fd5b600166038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16348161049257fe5b0410156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb9061485f565b60405180910390fd5b600a66038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff1634816104fd57fe5b04111561053f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105369061489f565b60405180910390fd5b6105b866038d7ea4c6800074ffffffffffffffffffffffffffffffffffffffffff16348161056957fe5b04600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461093390919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600160ff16811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d9061481f565b60405180910390fd5b6106d881600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461098890919063ffffffff16565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060005b81811015610749576107366000600162030d406109d2565b600981905550808060010191505061071e565b5050565b610755610eb6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078c57600080fd5b60006107998484846111ca565b60ff1614156107df576107de60c8836040516020016107b89190614684565b6040516020818303038152906040528051906020012060001c816107d857fe5b066112fa565b5b505050565b60095481565b600560019054906101000a900460ff1680610809575061080861155f565b5b806108215750600560009054906101000a900460ff16155b610860576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108579061487f565b60405180910390fd5b6000600560019054906101000a900460ff1615905080156108b2576001600560016101000a81548160ff0219169083151502179055506001600560006101000a81548160ff0219169083151502179055505b6108bf603060f81b611576565b6108c7611872565b80156108e9576000600560016101000a81548160ff0219169083151502179055505b50565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60008082840190508381101561097e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610975906147ff565b60405180910390fd5b8091505092915050565b60006109ca83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611a75565b905092915050565b600080831180156109e4575060208311155b6109ed57600080fd5b600a840293506060600167ffffffffffffffff81118015610a0d57600080fd5b506040519080825280601f01601f191660200182016040528015610a405781602001600182028036833780820191505090505b5090508360f81b81600081518110610a5457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610a9d57600080fd5b506040519080825280601f01601f191660200182016040528015610ad05781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610aed57600080fd5b506040519080825280601f01601f191660200182016040528015610b205781602001600182028036833780820191505090505b5090506000610b2d611ad0565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610b6557600080fd5b506040519080825280601f01601f191660200182016040528015610b985781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610bbb57600080fd5b506040519080825280601f01601f191660200182016040528015610bee5781602001600182028036833780820191505090505b509050610c018260186008846000611de2565b50610c0a613c2e565b60405180608001604052808781526020018881526020018681526020018481525090506000610c6f6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e41565b90506060600867ffffffffffffffff81118015610c8b57600080fd5b506040519080825280601f01601f191660200182016040528015610cbe5781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350610ea3828285600160048110610dfd57fe5b6020020151600287600060048110610e1157fe5b6020020151604051610e239190614603565b602060405180830381855afa158015610e40573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e639190613eb8565b87600260048110610e7057fe5b6020020151604051602001610e889493929190614642565b604051602081830303815290604052805190602001206121be565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f3e57506000610f3c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15610f4f57610f4d60006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610fb957600080fd5b505af1158015610fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff19190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461112557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561118d57600080fd5b505af11580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190613e8f565b905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106111fa57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158061128d57507f50000000000000000000000000000000000000000000000000000000000000008260018151811061125d57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b806112b95750600160ff16826002815181106112a557fe5b602001015160f81c60f81b60f81c60ff1614155b156112c757600190506112f3565b60006112dc8386866112d76121f6565b612298565b9050806112ed5760029150506112f3565b60009150505b9392505050565b60198111156113a75760066007604051611313906146d8565b9081526020016040518091039020908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201816000019080546001816001161561010002031660029004611371929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff1602179055505050611503565b600581101580156113b9575060198111155b1561146257600660076040516113ce906146ed565b908152602001604051809103902090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820181600001908054600181600116156101000203166002900461142c929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff1602179055505050611502565b60066007604051611472906146c3565b90815260200160405180910390209080600181540180825580915050600190039060005260206000209060020201600090919091909150600082018160000190805460018160011615610100020316600290046114d0929190613c55565b506001820160009054906101000a900460ff168160010160006101000a81548160ff021916908360ff16021790555050505b5b7f6ee21981be617443567eeac157be22928d3cfa41c453eb6c666eff8cd650fa4f60066001600680549050038154811061153957fe5b906000526020600020906002020160405161155491906148bf565b60405180910390a150565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806115fd575060006115fb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b1561160e5761160c60006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561167857600080fd5b505af115801561168c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b09190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117e457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561176c57600080fd5b505af1158015611780573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a49190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040161183d9190614724565b600060405180830381600087803b15801561185757600080fd5b505af115801561186b573d6000803e3d6000fd5b5050505050565b60405180604001604052806040518060400160405280600481526020017f52617265000000000000000000000000000000000000000000000000000000008152508152602001600160ff1681525060076040516118ce906146d8565b908152602001604051809103902060008201518160000190805190602001906118f8929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff16021790555090505060405180604001604052806040518060400160405280600a81526020017f53757065722052617265000000000000000000000000000000000000000000008152508152602001600360ff168152506007604051611979906146ed565b908152602001604051809103902060008201518160000190805190602001906119a3929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff16021790555090505060405180604001604052806040518060400160405280600a81526020017f556c7472612052617265000000000000000000000000000000000000000000008152508152602001600a60ff168152506007604051611a24906146c3565b90815260200160405180910390206000820151816000019080519060200190611a4e929190613cdc565b5060208201518160010160006101000a81548160ff021916908360ff160217905550905050565b6000838311158290611abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab491906147ad565b60405180910390fd5b5060008385039050809150509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b5857506000611b56600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15611b6957611b6760006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bd357600080fd5b505af1158015611be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0b9190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d3f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611cc757600080fd5b505af1158015611cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cff9190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611da557600080fd5b505afa158015611db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddd9190613eb8565b905090565b6060600082850190508084511015611df957600080fd5b600086602001905060008460200190505b868860200101821015611e325781890151808288015250602082019150602081019050611e0a565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ec957506000611ec7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b15611eda57611ed860006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f4457600080fd5b505af1158015611f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7c9190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120b057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561203857600080fd5b505af115801561204c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120709190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff811180156120ca57600080fd5b506040519080825280602002602001820160405280156120fe57816020015b60608152602001906001900390816120e95790505b5090508360006004811061210e57fe5b60200201518160008151811061212057fe5b60200260200101819052508360016004811061213857fe5b60200201518160018151811061214a57fe5b60200260200101819052508360026004811061216257fe5b60200201518160028151811061217457fe5b60200260200101819052508360036004811061218c57fe5b60200201518160038151811061219e57fe5b60200260200101819052506121b48582856127dd565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000813b9050919050565b60006121ef612bea565b9050919050565b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561228e5780601f106122635761010080835404028352916020019161228e565b820191906000526020600020905b81548152906001019060200180831161227157829003601f168201915b5050505050905090565b60008060206002876045815181106122ac57fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff811180156122de57600080fd5b506040519080825280601f01601f1916602001820160405280156123115781602001600182028036833780820191505090505b50905061232387836020846000611de2565b506002848760405160200161233992919061469b565b6040516020818303038152906040526040516123559190614603565b602060405180830381855afa158015612372573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906123959190613eb8565b6040516020016123a591906145e8565b604051602081830303815290604052805190602001208180519060200120146123d3576000925050506127d5565b606060028860016049860101815181106123e957fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561241157600080fd5b506040519080825280601f01601f1916602001820160405280156124445781602001600182028036833780820191505090505b50905061245988604985018351846000611de2565b506124d660028260405161246d9190614603565b602060405180830381855afa15801561248a573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906124ad9190613eb8565b878a60086020880101815181106124c057fe5b602001015160f81c60f81b60f81c60ff16613141565b6124e657600093505050506127d5565b6060602967ffffffffffffffff8111801561250057600080fd5b506040519080825280601f01601f1916602001820160405280156125335781602001600182028036833780820191505090505b50905061254889602086016029846000611de2565b506060604067ffffffffffffffff8111801561256357600080fd5b506040519080825280601f01601f1916602001820160405280156125965781602001600182028036833780820191505090505b50905060006041845160296020890101010190506125bc8b604083036040856000611de2565b5060006002836040516125cf9190614603565b602060405180830381855afa1580156125ec573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061260f9190613eb8565b9050838160405160200161262492919061461a565b60405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561267057600360008c815260200190815260200160002060009055612680565b60009750505050505050506127d5565b6060604967ffffffffffffffff8111801561269a57600080fd5b506040519080825280601f01601f1916602001820160405280156126cd5781602001600182028036833780820191505090505b5090506126df8d896049846000611de2565b5061273a6002826040516126f39190614603565b602060405180830381855afa158015612710573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127339190613eb8565b87866131ee565b61274f576000985050505050505050506127d5565b6004600083815260200190815260200160002060009054906101000a900460ff166127a95761277e8d846133da565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061286557506000612863600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166121da565b145b156128765761287460006121e5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156128e057600080fd5b505af11580156128f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129189190613e8f565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612a4c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156129d457600080fd5b505af11580156129e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0c9190613e8f565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b8152600401612aaa9291906147cf565b602060405180830381600087803b158015612ac457600080fd5b505af1158015612ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612afc9190613fb4565b9050823a02670de0b6b3a764000001811115612b1e576000801b915050612be3565b6060612b29856137ca565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401612b8c949392919061475a565b6020604051808303818588803b158015612ba557600080fd5b505af1158015612bb9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190612bde9190613eb8565b925050505b9392505050565b600080612c0a731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6121da565b1115612cac57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ca36040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612ccb73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16121da565b1115612d6d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d646040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612d8c73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6121da565b1115612e2e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612e256040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612e4d73146500cfd35b22e4a392fe0adc06de1a1368ed486121da565b1115612eef5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ee66040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612f0e73a2998efd205fb9d4b4963afb70778d6354ad3a416121da565b1115612fb05773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612fa76040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613847565b6001905061313e565b6000612fcf736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756121da565b111561303357736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b60006130527320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6121da565b11156130b6577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b60006130d57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6121da565b1115613139577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061313e565b600090505b90565b600080600190508284511461315557600080fd5b60005b838110156131e25784818151811061316c57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106131a557fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146131d557600091505b8080600101915050613158565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561321057600080fd5b506040519080825280601f01601f1916602001820160405280156132435781602001600182028036833780820191505090505b509050600060208960038151811061325757fe5b602001015160f81c60f81b60f81c60ff1603600401905061327d89826020856000611de2565b91506060602067ffffffffffffffff8111801561329957600080fd5b506040519080825280601f01601f1916602001820160405280156132cc5781602001600182028036833780820191505090505b5090506022820191506133088a60208c60018603815181106132ea57fe5b602001015160f81c60f81b60f81c60ff160384016020846000611de2565b905060208301519450602081015193506133258b601b8787613861565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16141561337b5760019750505050505050506133d3565b6133888b601c8787613861565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106133f057fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561341857600080fd5b506040519080825280601f01601f19166020018201604052801561344b5781602001600182028036833780820191505090505b50905061345d85858351846000611de2565b506060604067ffffffffffffffff8111801561347857600080fd5b506040519080825280601f01601f1916602001820160405280156134ab5781602001600182028036833780820191505090505b5090506134be8660046040846000611de2565b506060606267ffffffffffffffff811180156134d957600080fd5b506040519080825280601f01601f19166020018201604052801561350c5781602001600182028036833780820191505090505b509050600160f81b8160008151811061352157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061356287604188036041846001611de2565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c81525090506135ad8160006020856042611de2565b506136086002836040516135c19190614603565b602060405180830381855afa1580156135de573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906136019190613eb8565b85856131ee565b94508461361d576000955050505050506137c4565b6060604051806060016040528060408152602001614b966040913990506060604267ffffffffffffffff8111801561365457600080fd5b506040519080825280601f01601f1916602001820160405280156136875781602001600182028036833780820191505090505b50905060fe60f81b8160008151811061369c57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506136db8a60036041846001611de2565b50606060028b6045815181106136ed57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561371557600080fd5b506040519080825280601f01601f1916602001820160405280156137485781602001600182028036833780820191505090505b50905061375b8b60448351846000611de2565b506137b660028360405161376f9190614603565b602060405180830381855afa15801561378c573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906137af9190613eb8565b82856131ee565b975087985050505050505050505b92915050565b60606137d46138a5565b6137dc613d5c565b6137e8816104006138b1565b6137f1816138fb565b60005b83518110156138305761382384828151811061380c57fe5b60200260200101518361390990919063ffffffff16565b80806001019150506137f4565b5061383a8161392e565b8060000151915050919050565b806002908051906020019061385d929190613cdc565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b60405180590338823950565b60008190506000602082816138c257fe5b06146138db57602081816138d257fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61390681600461393c565b50565b613916826002835161395d565b6139298183613a9d90919063ffffffff16565b505050565b61393981600761393c565b50565b613959601f60058360ff16901b1783613b4890919063ffffffff16565b5050565b60178111613989576139848160058460ff16901b60ff161784613b4890919063ffffffff16565b613a98565b60ff81116139ca576139ae601860058460ff16901b1784613b4890919063ffffffff16565b6139c481600185613b889092919063ffffffff16565b50613a97565b61ffff8111613a0c576139f0601960058460ff16901b1784613b4890919063ffffffff16565b613a0681600285613b889092919063ffffffff16565b50613a96565b63ffffffff8111613a5057613a34601a60058460ff16901b1784613b4890919063ffffffff16565b613a4a81600485613b889092919063ffffffff16565b50613a95565b67ffffffffffffffff8111613a9457613a7c601b60058460ff16901b1784613b4890919063ffffffff16565b613a9281600885613b889092919063ffffffff16565b505b5b5b5b5b505050565b613aa5613d5c565b82602001518360000151518351011115613ad557613ad4836002613ace86602001518651613bef565b02613c0b565b5b60008060008451905085518051602081830101945086518101825260208701935050505b60208110613b1c5781518352602083019250602082019150602081039050613af9565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b81602001516001836000015151011115613b6e57613b6d826002846020015102613c0b565b5b815180516020818301018381536001820183525050505050565b613b90613d5c565b836020015184600001515183011115613bbe57613bbd846002613bb7876020015186613bef565b02613c0b565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b600081831115613c0157829050613c05565b8190505b92915050565b606082600001519050613c1e83836138b1565b613c288382613a9d565b50505050565b60405180608001604052806004905b6060815260200190600190039081613c3d5790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613c8e5780548555613ccb565b82800160010185558215613ccb57600052602060002091601f016020900482015b82811115613cca578254825591600101919060010190613caf565b5b509050613cd89190613d76565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613d1d57805160ff1916838001178555613d4b565b82800160010185558215613d4b579182015b82811115613d4a578251825591602001919060010190613d2f565b5b509050613d589190613d76565b5090565b604051806040016040528060608152602001600081525090565b5b80821115613d8f576000816000905550600101613d77565b5090565b600081519050613da281614b50565b92915050565b600081359050613db781614b67565b92915050565b600081519050613dcc81614b67565b92915050565b600082601f830112613de357600080fd5b8135613df6613df182614929565b6148fc565b91508082526020830160208301858383011115613e1257600080fd5b613e1d838284614acc565b50505092915050565b600082601f830112613e3757600080fd5b8135613e4a613e4582614955565b6148fc565b91508082526020830160208301858383011115613e6657600080fd5b613e71838284614acc565b50505092915050565b600081519050613e8981614b7e565b92915050565b600060208284031215613ea157600080fd5b6000613eaf84828501613d93565b91505092915050565b600060208284031215613eca57600080fd5b6000613ed884828501613dbd565b91505092915050565b60008060408385031215613ef457600080fd5b6000613f0285828601613da8565b925050602083013567ffffffffffffffff811115613f1f57600080fd5b613f2b85828601613e26565b9150509250929050565b600080600060608486031215613f4a57600080fd5b6000613f5886828701613da8565b935050602084013567ffffffffffffffff811115613f7557600080fd5b613f8186828701613e26565b925050604084013567ffffffffffffffff811115613f9e57600080fd5b613faa86828701613dd2565b9150509250925092565b600060208284031215613fc657600080fd5b6000613fd484828501613e7a565b91505092915050565b6000613fe98383614544565b905092915050565b6000613ffc826149a6565b61400681856149d4565b93508360208202850161401885614981565b8060005b8581101561405457848403895281516140358582613fdd565b9450614040836149c7565b925060208a0199505060018101905061401c565b50829750879550505050505092915050565b61406f81614a4d565b82525050565b61407e81614a79565b82525050565b61409561409082614a79565b614b28565b82525050565b60006140a6826149b1565b6140b081856149e5565b93506140c0818560208601614adb565b6140c981614b32565b840191505092915050565b60006140df826149b1565b6140e981856149f6565b93506140f9818560208601614adb565b80840191505092915050565b61410e81614aba565b82525050565b600061411f826149bc565b6141298185614a01565b9350614139818560208601614adb565b61414281614b32565b840191505092915050565b6000614158826149bc565b6141628185614a12565b9350614172818560208601614adb565b61417b81614b32565b840191505092915050565b6000614191826149bc565b61419b8185614a23565b93506141ab818560208601614adb565b80840191505092915050565b6000815460018116600081146141d457600181146141fa5761423e565b607f60028304166141e58187614a01565b955060ff19831686526020860193505061423e565b600282046142088187614a01565b955061421385614991565b60005b8281101561423557815481890152600182019150602081019050614216565b80880195505050505b505092915050565b6000614253601b83614a12565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000614293602483614a12565b91507f596f75206e65656420746f2070756c6c2061206d696e696d756d206f6620312060008301527f74696d65000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006142f9602683614a12565b91507f302e30303120457468657220697320746865206d696e696d756d20726571756960008301527f72656d656e7400000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061435f602583614a12565b91507f596f7520646f206e6f74206861766520656e6f7567682066756e647320746f2060008301527f70756c6c210000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006143c5600a83614a23565b91507f556c7472612052617265000000000000000000000000000000000000000000006000830152600a82019050919050565b6000614405602e83614a12565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061446b603f83614a12565b91507f596f7520617265206e6f7420616c6c6f77656420746f2070756c6c206d6f726560008301527f207468616e2031302074696d657320696e20612073696e676c65207475726e006020830152604082019050919050565b60006144d1600483614a23565b91507f52617265000000000000000000000000000000000000000000000000000000006000830152600482019050919050565b6000614511600a83614a23565b91507f53757065722052617265000000000000000000000000000000000000000000006000830152600a82019050919050565b600060408301600083015184820360008601526145618282614114565b915050602083015161457660208601826145d9565b508091505092915050565b6000604083016000808401858303600087015261459e83826141b7565b925050600184015490506145b181614b0e565b6145be60208701826145d9565b50819250505092915050565b6145d381614aa3565b82525050565b6145e281614aad565b82525050565b60006145f48284614084565b60208201915081905092915050565b600061460f82846140d4565b915081905092915050565b600061462682856140d4565b91506146328284614084565b6020820191508190509392505050565b600061464e82876140d4565b915061465a82866140d4565b91506146668285614084565b60208201915061467682846140d4565b915081905095945050505050565b60006146908284614186565b915081905092915050565b60006146a78285614186565b91506146b38284614084565b6020820191508190509392505050565b60006146ce826143b8565b9150819050919050565b60006146e3826144c4565b9150819050919050565b60006146f882614504565b9150819050919050565b6000602082019050818103600083015261471c8184613ff1565b905092915050565b60006020820190506147396000830184614066565b92915050565b60006020820190506147546000830184614075565b92915050565b600060808201905061476f6000830187614105565b8181036020830152614781818661414d565b90508181036040830152614795818561409b565b90506147a460608301846145ca565b95945050505050565b600060208201905081810360008301526147c7818461414d565b905092915050565b600060408201905081810360008301526147e9818561414d565b90506147f860208301846145ca565b9392505050565b6000602082019050818103600083015261481881614246565b9050919050565b6000602082019050818103600083015261483881614286565b9050919050565b60006020820190508181036000830152614858816142ec565b9050919050565b6000602082019050818103600083015261487881614352565b9050919050565b60006020820190508181036000830152614898816143f8565b9050919050565b600060208201905081810360008301526148b88161445e565b9050919050565b600060208201905081810360008301526148d98184614581565b905092915050565b60006020820190506148f660008301846145ca565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561491f57600080fd5b8060405250919050565b600067ffffffffffffffff82111561494057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561496c57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600060ff82169050919050565b6000614a4682614a83565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000614ac582614aa3565b9050919050565b82818337600083830152505050565b60005b83811015614af9578082015181840152602081019050614ade565b83811115614b08576000848401525b50505050565b6000614b21614b1c83614b43565b614a2e565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b614b5981614a3b565b8114614b6457600080fd5b50565b614b7081614a79565b8114614b7b57600080fd5b50565b614b8781614aa3565b8114614b9257600080fd5b5056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212200f3b9891fc9e62d5a45378103f4c71166921422bbdb9603f5408f1ed44c436d764736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "205:3716:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "205:3716:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:137;;;:::i;:::-;;15744:132:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1112:103:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1442:785;;;:::i;:::-;;2471:335;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;605:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:121;;;:::i;:::-;;2368:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1265:137;330:16;814:21;;:9;:21;;806:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1349:45:::1;330:16;1373:20;;:9;:20;;;;;;1349:7;:19;1357:10;1349:19;;;;;;;;;;;;;;;;:23;;:45;;;;:::i;:::-;1327:7;:19;1335:10;1327:19;;;;;;;;;;;;;;;:67;;;;1265:137::o:0;15744:132:4:-;15828:40;15839:5;15846:7;15865:1;15855:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15828:10;:40::i;:::-;15744:132;;:::o;1112:103:1:-;1162:13;1195:12;1188:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:103;:::o;1442:785::-;330:16;814:21;;:9;:21;;806:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1537:1:::1;330:16;1513:20;;:9;:20;;;;;;:25;;1505:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1623:2;330:16;1599:20;;:9;:20;;;;;;:26;;1591:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;1726:45;330:16;1750:20;;:9;:20;;;;;;1726:7;:19;1734:10;1726:19;;;;;;;;;;;;;;;;:23;;:45;;;;:::i;:::-;1704:7;:19;1712:10;1704:19;;;;;;;;;;;;;;;:67;;;;1782:10;1795:7;:19;1803:10;1795:19;;;;;;;;;;;;;;;;1782:32;;382:1;1833:20;;:5;:20;;1825:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1929:30;1953:5;1929:7;:19;1937:10;1929:19;;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;1907:7;:19;1915:10;1907:19;;;;;;;;;;;;;;;:52;;;;1976:6;1972:248;1992:5;1988:1;:9;1972:248;;;2027:181;2067:1;2117;2166:6;2027:25;:181::i;:::-;2019:7;:189;;;;1999:3;;;;;;;1972:248;;;;889:1;1442:785::o:0;2471:335::-;2602:20;:18;:20::i;:::-;2588:34;;:10;:34;;;2580:43;;;;;;2707:1;2638:66;2680:8;2689:7;2697:6;2638:41;:66::i;:::-;:70;;;2634:165;;;2725:62;2783:3;2770:7;2753:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;2743:36;;;;;;2735:45;;:51;;;;;;2725:9;:62::i;:::-;2634:165;2471:335;;;:::o;605:22::-;;;;:::o;636:121::-;1457:13:2;;;;;;;;;;;:33;;;;1474:16;:14;:16::i;:::-;1457:33;:50;;;;1495:12;;;;;;;;;;;1494:13;1457:50;1449:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1571:19;1594:13;;;;;;;;;;;1593:14;1571:36;;1622:14;1618:101;;;1669:4;1653:13;;:20;;;;;;;;;;;;;;;;;;1703:4;1688:12;;:19;;;;;;;;;;;;;;;;;;1618:101;694:35:1::1;11574:4:4;712:16:1;;694:17;:35::i;:::-;738:11;:9;:11::i;:::-;1749:14:2::0;1745:68;;;1796:5;1780:13;;:21;;;;;;;;;;;;;;;;;;1745:68;636:121:1;:::o;2368:95::-;2413:4;2436:7;:19;2444:10;2436:19;;;;;;;;;;;;;;;;2429:26;;2368:95;:::o;910:181:5:-;968:7;988:9;1004:1;1000;:5;988:17;;1029:1;1024;:6;;1016:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1082:1;1075:8;;;910:181;;;;:::o;1374:136::-;1432:7;1459:43;1463:1;1466;1459:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1452:50;;1374:136;;;;:::o;46187:2689:4:-;46289:16;46337:1;46327:7;:11;46326:32;;;;;46355:2;46344:7;:13;;46326:32;46318:41;;;;;;46380:2;46370:12;;;;46439:19;46471:1;46461:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46439:34;;46507:7;46496:20;;46484:6;46491:1;46484:9;;;;;;;;;;;:32;;;;;;;;;;;46527:19;46559:2;46549:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46527:35;;46573:27;46613:2;46603:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46573:43;;46627:30;46660:40;:38;:40::i;:::-;46627:73;;46750:4;46742:6;46735:20;47107:11;47095:10;47091:28;47086:1;47076:8;47072:16;47062:27;47058:62;47051:4;47043:6;47039:17;47032:89;47158:4;47142:14;47135:28;47211:22;47204:4;47188:14;47184:25;47177:57;47255:18;47286:2;47276:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47255:34;;47349:6;47342:4;47335:5;47331:16;47324:32;47377:25;47415:1;47405:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47377:40;;47428;47438:5;47445:2;47449:1;47452:12;47466:1;47428:9;:40::i;:::-;;47479:20;;:::i;:::-;:62;;;;;;;;47503:6;47479:62;;;;47511:6;47479:62;;;;47519:14;47479:62;;;;47535:5;47479:62;;;;;47552:15;47570:47;;;;;;;;;;;;;;;;;;47595:4;47601:15;47570:14;:47::i;:::-;47552:65;;47628:30;47671:1;47661:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47628:45;;47741:4;47727:12;47723:23;47717:30;47806:65;47803:1;47799:73;47792:4;47773:17;47769:28;47761:112;47932:63;47929:1;47925:71;47918:4;47899:17;47895:28;47887:110;48056:61;48053:1;48049:69;48042:4;48023:17;48019:28;48011:108;48178:59;48175:1;48171:67;48164:4;48145:17;48141:28;48133:106;48298:57;48295:1;48291:65;48284:4;48265:17;48261:28;48253:104;48416:55;48413:1;48409:63;48402:4;48383:17;48379:28;48371:102;48532:53;48529:1;48525:61;48518:4;48499:17;48495:28;48487:100;48646:51;48643:1;48639:59;48632:4;48613:17;48609:28;48601:98;47693:1017;48720:123;48752:7;48788:17;48807:4;48812:1;48807:7;;;;;;;;;;;48816:15;48823:4;48828:1;48823:7;;;;;;;;;;;48816:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;48833:4;48838:1;48833:7;;;;;;;;;;;48771:70;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;48761:81;;;;;;48720:31;:123::i;:::-;48861:7;48854:14;;;;;;;;;;;46187:2689;;;;;:::o;38114:132::-;38174:24;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38218:8:::1;::::0;::::1;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38211:27;;38114:132:::0;:::o;51709:589::-;51840:17;51969:16;:6;51976:1;51969:9;;;;;;;;;;;;;;;;:16;;;;;51968:40;;;;51991:16;:6;51998:1;51991:9;;;;;;;;;;;;;;;;:16;;;;;51968:40;:74;;;;52039:1;52013:28;;52019:6;52026:1;52019:9;;;;;;;;;;;;;;;;52013:16;;:28;;;;51968:74;51964:115;;;52066:1;52059:8;;;;51964:115;52089:18;52110:96;52146:6;52154:8;52170:7;52180:25;:23;:25::i;:::-;52110:35;:96::i;:::-;52089:117;;52222:13;52217:55;;52259:1;52252:8;;;;;52217:55;52289:1;52282:8;;;51709:589;;;;;;:::o;3029:368:1:-;3105:2;3090:12;:17;3086:242;;;3124:12;3142:5;:13;;;;;:::i;:::-;;;;;;;;;;;;;3124:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3086:242;;;3194:1;3178:12;:17;;:39;;;;;3215:2;3199:12;:18;;3178:39;3174:154;;;3234:12;3252:5;:19;;;;;:::i;:::-;;;;;;;;;;;;;3234:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:154;;;3290:12;3308:5;:19;;;;;:::i;:::-;;;;;;;;;;;;;3290:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:154;3086:242;3346:43;3351:12;3386:1;3364:12;:19;;;;:23;3351:37;;;;;;;;;;;;;;;;;;3346:43;;;;;;:::i;:::-;;;;;;;;3029:368;:::o;1913:604:2:-;1961:4;2332:12;2355:4;2332:28;;2371:10;2478:4;2466:17;2460:23;;2508:1;2502:2;:7;2495:14;;;;1913:604;:::o;37986:118:4:-;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38066:8:::1;::::0;::::1;;;;;;;;:21;;;38088:7;38066:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;37986:118:::0;:::o;3469:368:1:-;3525:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3587:1;3525:75;;;;;3509:5;:13;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3633:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:1;3633:81;;;;;3611:5;:19;;;;;:::i;:::-;;;;;;;;;;;;;:103;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3747:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3815:2;3747:82;;;;;3725:5;:19;;;;;:::i;:::-;;;;;;;;;;;;;:104;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:368::o;1813:192:5:-;1899:7;1932:1;1927;:6;;1935:12;1919:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1959:9;1975:1;1971;:5;1959:17;;1996:1;1989:8;;;1813:192;;;;;:::o;38557:171:4:-;38637:23;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;38680:8:::1;::::0;::::1;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38673:47;;38557:171:::0;:::o;55647:707::-;55775:25;55813:14;55840:9;55830:7;:19;55813:36;;55882:9;55868:3;:10;:23;;55860:32;;;;;;55948:6;55962:11;55957:2;:16;55948:25;;56065:6;56079:9;56074:2;:14;56065:23;;56099:227;56130:7;56116:11;56111:2;:16;:26;56106:1;:32;56099:227;;;56211:1;56204:5;56200:13;56194:20;56252:3;56248:1;56243:3;56239:11;56232:24;56164:107;56290:2;56285:7;;;;56312:2;56307:7;;;;56099:227;;;56343:3;56336:10;;;;;55647:707;;;;;;;:::o;35894:384::-;36014:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;36038:22:::1;36075:1;36063:14;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36038:39;;36101:5;36107:1;36101:8;;;;;;;;;;;36088:7;36096:1;36088:10;;;;;;;;;;;;;:21;;;;36133:5;36139:1;36133:8;;;;;;;;;;;36120:7;36128:1;36120:10;;;;;;;;;;;;;:21;;;;36165:5;36171:1;36165:8;;;;;;;;;;;36152:7;36160:1;36152:10;;;;;;;;;;;;;:21;;;;36197:5;36203:1;36197:8;;;;;;;;;;;36184:7;36192:1;36184:10;;;;;;;;;;;;;:21;;;;36223:47;36238:11;36251:7;36260:9;36223:14;:47::i;:::-;36216:54;;;35894:384:::0;;;;;:::o;48884:154::-;49019:11;48984:22;:32;49007:8;48984:32;;;;;;;;;;;:46;;;;48884:154;;:::o;38254:151::-;38313:10;38381:5;38369:18;38360:27;;38345:53;;;:::o;12938:208::-;13003:16;13117:21;:19;:21::i;:::-;13110:28;;12938:208;;;:::o;13289:133::-;13347:26;13393:21;13386:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13289:133;:::o;52717:2791::-;52869:19;53014:22;53088:2;53083:1;53060:6;53067:10;53060:18;;;;;;;;;;;;;;;;53054:25;;53049:31;;:35;53039:6;:46;:51;53014:76;;53101:20;53134:2;53124:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53101:36;;53148:52;53158:6;53166:17;53185:2;53189:7;53198:1;53148:9;:52::i;:::-;;53266:48;53290:12;53304:8;53273:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;53266:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;53249:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;53239:77;;;;;;53227:7;53217:18;;;;;;:99;53211:147;;53341:5;53334:12;;;;;;53211:147;53368:17;53463:1;53409:6;53456:1;53437:15;53416:17;:37;:41;53409:49;;;;;;;;;;;;;;;;53403:56;;53398:62;;:66;53388:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53368:97;;53476:78;53486:6;53515:15;53494:17;:37;53533:4;:11;53546:4;53552:1;53476:9;:78::i;:::-;;53724:90;53743:12;53750:4;53743:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;53757:7;53777:6;53809:1;53804:2;53784:17;:22;:26;53777:34;;;;;;;;;;;;;;;;53771:41;;53766:47;;53724:18;:90::i;:::-;53719:136;;53838:5;53831:12;;;;;;;53719:136;54104:29;54146:10;54136:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54104:53;;54168:74;54178:6;54206:2;54186:17;:22;54210:10;54222:16;54240:1;54168:9;:74::i;:::-;;54253:26;54292:2;54282:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54253:42;;54306:15;54378:2;54364:4;:11;54350:10;54344:2;54324:17;:22;:37;:51;:56;54306:74;;54391:56;54401:6;54422:2;54409:10;:15;54426:2;54430:13;54445:1;54391:9;:56::i;:::-;;54458:25;54486:21;54493:13;54486:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;54458:49;;54585:16;54603:17;54568:53;;;;;;;;;:::i;:::-;;;;;;;;;;;;;54558:64;;;;;;54522:22;:32;54545:8;54522:32;;;;;;;;;;;;:100;54518:232;;;54688:22;:32;54711:8;54688:32;;;;;;;;;;;54681:39;;;54518:232;;;54745:5;54738:12;;;;;;;;;;;54518:232;54874:20;54907:15;54897:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54874:49;;54934:65;54944:6;54952:17;54971:15;54988:7;54997:1;54934:9;:65::i;:::-;;55015:47;55025:15;55032:7;55025:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55042:4;55048:13;55015:9;:47::i;:::-;55010:93;;55086:5;55079:12;;;;;;;;;;;;55010:93;55202:41;:60;55244:17;55202:60;;;;;;;;;;;;;;;;;;;;;55197:226;;55342:69;55392:6;55400:10;55342:49;:69::i;:::-;55279:41;:60;55321:17;55279:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;55197:226;55440:41;:60;55482:17;55440:60;;;;;;;;;;;;;;;;;;;;;55433:67;;;;;;;;;;52717:2791;;;;;;;:::o;30296:462::-;30415:11;12213:1;12189:26;;12197:3;;;;;;;;;;;12189:26;;;12188:64;;;;12250:1;12221:25;12241:3;;;;;;;;;;;12221:11;:25::i;:::-;:30;12188:64;12184:132;;;12269:35;11835:1;12269:19;:35::i;:::-;;12184:132;12351:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12330:37;;12338:8;;;;;;;;;;12330:37;;;12326:108;;12405:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12384:8;;:38;;;;;;;;;;;;;;;;;;12326:108;30439:10:::1;30452:8:::0;::::1;;;;;;;;;;:17;;;30470:11;30483:9;30452:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30439:54;;30540:9;30526:11;:23;30516:7;:33;30508:5;:41;30504:109;;;30573:1;30566:8:::0;::::1;;;;;;30504:109;30623:17;30643:14;30651:5;30643:7;:14::i;:::-;30623:34;;30675:8;::::0;::::1;;;;;;;;:28;;;30711:5;30718:1;30721:11;30734:4;30740:9;30675:75;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30668:82;;;;12444:1;30296:462:::0;;;;;:::o;13430:2070::-;13479:16;13570:1;13512:55;13524:42;13512:11;:55::i;:::-;:59;13508:250;;;13624:42;13598:3;;:69;;;;;;;;;;;;;;;;;;13682:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13742:4;13735:11;;;;13508:250;13830:1;13772:55;13784:42;13772:11;:55::i;:::-;:59;13768:259;;;13892:42;13866:3;;:69;;;;;;;;;;;;;;;;;;13950:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14011:4;14004:11;;;;13768:259;14099:1;14041:55;14053:42;14041:11;:55::i;:::-;:59;14037:254;;;14159:42;14133:3;;:69;;;;;;;;;;;;;;;;;;14217:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14275:4;14268:11;;;;14037:254;14363:1;14305:55;14317:42;14305:11;:55::i;:::-;:59;14301:258;;;14425:42;14399:3;;:69;;;;;;;;;;;;;;;;;;14483:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14543:4;14536:11;;;;14301:258;14631:1;14573:55;14585:42;14573:11;:55::i;:::-;:59;14569:256;;;14692:42;14666:3;;:69;;;;;;;;;;;;;;;;;;14750:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14809:4;14802:11;;;;14569:256;14897:1;14839:55;14851:42;14839:11;:55::i;:::-;:59;14835:205;;;14959:42;14933:3;;:69;;;;;;;;;;;;;;;;;;15024:4;15017:11;;;;14835:205;15112:1;15054:55;15066:42;15054:11;:55::i;:::-;:59;15050:204;;;15173:42;15147:3;;:69;;;;;;;;;;;;;;;;;;15238:4;15231:11;;;;15050:204;15326:1;15268:55;15280:42;15268:11;:55::i;:::-;:59;15264:206;;;15389:42;15363:3;;:69;;;;;;;;;;;;;;;;;;15454:4;15447:11;;;;15264:206;15487:5;15480:12;;13430:2070;;:::o;52306:403::-;52417:19;52449:11;52463:4;52449:18;;52504:13;52486:7;:14;:31;52478:40;;;;;;52534:9;52529:149;52552:13;52549:1;:16;52529:149;;;52606:7;52614:1;52606:10;;;;;;;;;;;;;;;;52591:25;;;:8;52600:1;52591:11;;;;;;;;;;:25;;;;52587:80;;52646:5;52637:14;;52587:80;52567:3;;;;;;;52529:149;;;;52695:6;52688:13;;;52306:403;;;;;:::o;49046:1025::-;49145:17;49175:10;49196:14;49221:12;49244;49267:18;49298:2;49288:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49267:34;;49312:11;49357:4;49342:7;49350:1;49342:10;;;;;;;;;;;;;;;;49336:17;;49331:23;;:30;49326:1;:36;49312:50;;49381:40;49391:7;49400:6;49408:2;49412:5;49419:1;49381:9;:40::i;:::-;49373:48;;49432:18;49463:2;49453:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49432:34;;49487:6;49477:16;;;;49512:84;49522:7;49576:4;49552:7;49569:1;49560:6;:10;49552:19;;;;;;;;;;;;;;;;49546:26;;49541:32;;:39;49531:6;:50;49583:2;49587:5;49594:1;49512:9;:84::i;:::-;49504:92;;49656:2;49649:5;49645:14;49639:21;49631:29;;49699:2;49692:5;49688:14;49682:21;49674:29;;49742:41;49758:8;49768:2;49772:4;49778;49742:15;:41::i;:::-;49724:59;;;;;;;;49847:6;49798:55;;49832:7;49822:18;;;;;;49814:27;;49798:55;;;49794:270;;;49877:4;49870:11;;;;;;;;;;;49794:270;49932:41;49948:8;49958:2;49962:4;49968;49932:15;:41::i;:::-;49914:59;;;;;;;;50045:6;49996:55;;50030:7;50020:18;;;;;;50012:27;;49996:55;;;49988:64;;;;;;;;;49046:1025;;;;;;:::o;50079:1622::-;50195:19;50227:10;50390:17;50459:1;50431:6;50452:1;50438:11;:15;50431:23;;;;;;;;;;;;;;;;50425:30;;50420:36;;:40;50410:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50390:71;;50472:52;50482:6;50490:11;50503:4;:11;50516:4;50522:1;50472:9;:52::i;:::-;;50535:27;50575:2;50565:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50535:43;;50589:47;50599:6;50607:5;50614:2;50618:14;50634:1;50589:9;:47::i;:::-;;50647:20;50680:11;50670:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50647:45;;50727:1;50716:14;;50703:7;50711:1;50703:10;;;;;;;;;;;:27;;;;;;;;;;;50748:51;50758:6;50780:2;50766:11;:16;50784:2;50788:7;50797:1;50748:9;:51::i;:::-;;50810:21;:93;;;;;;;;;;;;;;;;;;;50914:43;50924:8;50934:1;50937:2;50941:7;50950:6;50914:9;:43::i;:::-;;50976:48;50986:15;50993:7;50986:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51003:4;51009:14;50976:9;:48::i;:::-;50968:56;;51040:5;51035:51;;51069:5;51062:12;;;;;;;;;51035:51;51189:22;:158;;;;;;;;;;;;;;;;;;;51358:20;51391:6;51381:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51358:40;;51422:4;51409:17;;:7;51417:1;51409:10;;;;;;;;;;;:17;;;;;;;;;;;51437:36;51447:6;51455:1;51458:2;51462:7;51471:1;51437:9;:36::i;:::-;;51484:17;51548:1;51525:6;51532:10;51525:18;;;;;;;;;;;;;;;;51519:25;;51514:31;;:35;51504:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51484:66;;51561:47;51571:6;51579;51587:4;:11;51600:4;51606:1;51561:9;:47::i;:::-;;51627:43;51637:15;51644:7;51637:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51654:4;51660:9;51627;:43::i;:::-;51619:51;;51688:5;51681:12;;;;;;;;;;50079:1622;;;;;:::o;45804:375::-;45865:26;45904:19;:17;:19::i;:::-;45934:24;;:::i;:::-;45969:22;45981:3;45986:4;45969:11;:22::i;:::-;46002:16;:3;:14;:16::i;:::-;46034:6;46029:90;46050:4;:11;46046:1;:15;46029:90;;;46083:24;46099:4;46104:1;46099:7;;;;;;;;;;;;;;46083:3;:15;;:24;;;;:::i;:::-;46063:3;;;;;;;46029:90;;;;46129:17;:3;:15;:17::i;:::-;46164:3;:7;;;46157:14;;;45804:375;;;:::o;13154:127::-;13260:13;13236:21;:37;;;;;;;;;;;;:::i;:::-;;13154:127;:::o;56566:1003::-;56658:13;56673:25;57113:8;57132:12;57197:4;57191:11;57229:5;57223:4;57216:19;57271:2;57266;57260:4;57256:13;57249:25;57310:2;57305;57299:4;57295:13;57288:25;57349:2;57344;57338:4;57334:13;57327:25;57407:2;57401:4;57396:3;57390:4;57387:1;57384;57378:4;57373:37;57366:44;;57517:4;57511:11;57503:19;;57164:369;57551:3;57556:4;57543:18;;;;;;56566:1003;;;;;;;:::o;59301:179::-;59397:4;59391:11;59456:4;59447:7;59443:18;59431:10;59425:4;59416:46;59364:109;:::o;4419:446::-;4494:13;4510:9;4494:25;;4551:1;4545:2;4534:8;:13;;;;;;:18;4530:83;;4598:2;4587:8;:13;;;;;;4581:2;:20;4569:32;;;;4530:83;4639:8;4623:4;:13;;:24;;;;;4737:4;4731:11;4769:3;4763:4;4756:17;4799:1;4794:3;4787:14;4837:8;4832:3;4828:18;4822:4;4815:32;4705:153;;;;:::o;10795:130::-;10867:50;10894:4;8902:1;10867:26;:50::i;:::-;10795:130;:::o;10400:181::-;10494:49;10505:4;8852:1;10529:6;:13;10494:10;:49::i;:::-;10554:19;10566:6;10554:4;:11;;:19;;;;:::i;:::-;;10400:181;;:::o;11067:138::-;11140:57;11167:4;9067:1;11140:26;:57::i;:::-;11067:138;:::o;9823:147::-;9924:38;9958:2;9953:1;9943:6;:11;;;;9942:18;9924:4;:11;;:38;;;;:::i;:::-;9823:147;;:::o;9077:738::-;9189:2;9179:6;:12;9175:633;;9208:42;9242:6;9237:1;9227:6;:11;;;;9226:22;;;9208:4;:11;;:42;;;;:::i;:::-;9175:633;;;9282:4;9272:6;:14;9268:540;;9303:38;9337:2;9332:1;9322:6;:11;;;;9321:18;9303:4;:11;;:38;;;;:::i;:::-;9356:25;9371:6;9379:1;9356:4;:14;;:25;;;;;:::i;:::-;;9268:540;;;9413:6;9403;:16;9399:409;;9436:38;9470:2;9465:1;9455:6;:11;;;;9454:18;9436:4;:11;;:38;;;;:::i;:::-;9489:25;9504:6;9512:1;9489:4;:14;;:25;;;;;:::i;:::-;;9399:409;;;9546:10;9536:6;:20;9532:276;;9573:38;9607:2;9602:1;9592:6;:11;;;;9591:18;9573:4;:11;;:38;;;;:::i;:::-;9626:25;9641:6;9649:1;9626:4;:14;;:25;;;;;:::i;:::-;;9532:276;;;9683:18;9673:6;:28;9669:139;;9718:38;9752:2;9747:1;9737:6;:11;;;;9736:18;9718:4;:11;;:38;;;;:::i;:::-;9771:25;9786:6;9794:1;9771:4;:14;;:25;;;;;:::i;:::-;;9669:139;9532:276;9399:409;9268:540;9175:633;9077:738;;;:::o;5513:1241::-;5592:21;;:::i;:::-;5663:4;:13;;;5645:4;:8;;;:15;5630:5;:12;:30;:46;5626:129;;;5693:50;5700:4;5741:1;5706:32;5710:4;:13;;;5725:5;:12;5706:3;:32::i;:::-;:36;5693:6;:50::i;:::-;5626:129;5765:9;5785:8;5804;5815:5;:12;5804:23;;5882:4;5876:11;5958:6;5952:13;6046:2;6037:6;6029;6025:19;6021:28;6013:36;;6170:5;6164:12;6156:6;6152:25;6144:6;6137:41;6234:2;6227:5;6223:14;6216:21;;5847:401;;6258:212;6271:2;6264:3;:9;6258:212;;6390:3;6384:10;6378:4;6371:24;6432:2;6424:10;;;;6456:2;6449:9;;;;6282:2;6275:9;;;;6258:212;;;6480:9;6512:1;6505:3;6500:2;:8;6492:3;:17;:21;6480:33;;6607:4;6603:9;6597:3;6591:10;6587:26;6660:4;6653;6647:11;6643:22;6705:7;6695:8;6692:21;6686:4;6679:35;6557:168;;6742:4;6735:11;;;;;;5513:1241;;;;:::o;7010:586::-;7110:4;:13;;;7106:1;7088:4;:8;;;:15;:19;:35;7084:99;;;7140:31;7147:4;7169:1;7153:4;:13;;;:17;7140:6;:31::i;:::-;7084:99;7237:4;7231:11;7313:6;7307:13;7405:2;7396:6;7388;7384:19;7380:28;7504:5;7498:4;7490:20;7551:1;7543:6;7539:14;7531:6;7524:30;7202:387;;;;;:::o;7898:748::-;7983:21;;:::i;:::-;8046:4;:13;;;8028:4;:8;;;:15;8021:4;:22;:38;8017:113;;;8076:42;8083:4;8116:1;8089:24;8093:4;:13;;;8108:4;8089:3;:24::i;:::-;:28;8076:6;:42::i;:::-;8017:113;8140:9;8166:1;8159:4;8152:3;:11;:15;8140:27;;8222:4;8216:11;8298:6;8292:13;8390:4;8381:6;8373;8369:19;8365:30;8528:5;8520:4;8516:9;8509:4;8503:11;8499:27;8496:38;8490:4;8483:52;8576:4;8568:6;8564:17;8556:6;8549:33;8187:430;;;8634:4;8627:11;;;7898:748;;;;;:::o;5058:151::-;5111:9;5142:2;5137;:7;5133:49;;;5168:2;5161:9;;;;5133:49;5199:2;5192:9;;5058:151;;;;;:::o;4873:177::-;4949:19;4971:4;:8;;;4949:30;;4990:21;4995:4;5001:9;4990:4;:21::i;:::-;5022:20;5029:4;5035:6;5022;:20::i;:::-;;4873:177;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;5:134::-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:130::-;;226:6;213:20;204:29;;238:33;265:5;238:33;:::i;:::-;198:78;;;;:::o;283:134::-;;367:6;361:13;352:22;;379:33;406:5;379:33;:::i;:::-;346:71;;;;:::o;425:440::-;;526:3;519:4;511:6;507:17;503:27;493:2;;544:1;541;534:12;493:2;581:6;568:20;603:64;618:48;659:6;618:48;:::i;:::-;603:64;:::i;:::-;594:73;;687:6;680:5;673:21;723:4;715:6;711:17;756:4;749:5;745:16;791:3;782:6;777:3;773:16;770:25;767:2;;;808:1;805;798:12;767:2;818:41;852:6;847:3;842;818:41;:::i;:::-;486:379;;;;;;;:::o;874:442::-;;976:3;969:4;961:6;957:17;953:27;943:2;;994:1;991;984:12;943:2;1031:6;1018:20;1053:65;1068:49;1110:6;1068:49;:::i;:::-;1053:65;:::i;:::-;1044:74;;1138:6;1131:5;1124:21;1174:4;1166:6;1162:17;1207:4;1200:5;1196:16;1242:3;1233:6;1228:3;1224:16;1221:25;1218:2;;;1259:1;1256;1249:12;1218:2;1269:41;1303:6;1298:3;1293;1269:41;:::i;:::-;936:380;;;;;;;:::o;1324:134::-;;1408:6;1402:13;1393:22;;1420:33;1447:5;1420:33;:::i;:::-;1387:71;;;;:::o;1465:263::-;;1580:2;1568:9;1559:7;1555:23;1551:32;1548:2;;;1596:1;1593;1586:12;1548:2;1631:1;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1610:108;1542:186;;;;:::o;1735:263::-;;1850:2;1838:9;1829:7;1825:23;1821:32;1818:2;;;1866:1;1863;1856:12;1818:2;1901:1;1918:64;1974:7;1965:6;1954:9;1950:22;1918:64;:::i;:::-;1908:74;;1880:108;1812:186;;;;:::o;2005:472::-;;;2136:2;2124:9;2115:7;2111:23;2107:32;2104:2;;;2152:1;2149;2142:12;2104:2;2187:1;2204:53;2249:7;2240:6;2229:9;2225:22;2204:53;:::i;:::-;2194:63;;2166:97;2322:2;2311:9;2307:18;2294:32;2346:18;2338:6;2335:30;2332:2;;;2378:1;2375;2368:12;2332:2;2398:63;2453:7;2444:6;2433:9;2429:22;2398:63;:::i;:::-;2388:73;;2273:194;2098:379;;;;;:::o;2484:701::-;;;;2641:2;2629:9;2620:7;2616:23;2612:32;2609:2;;;2657:1;2654;2647:12;2609:2;2692:1;2709:53;2754:7;2745:6;2734:9;2730:22;2709:53;:::i;:::-;2699:63;;2671:97;2827:2;2816:9;2812:18;2799:32;2851:18;2843:6;2840:30;2837:2;;;2883:1;2880;2873:12;2837:2;2903:63;2958:7;2949:6;2938:9;2934:22;2903:63;:::i;:::-;2893:73;;2778:194;3031:2;3020:9;3016:18;3003:32;3055:18;3047:6;3044:30;3041:2;;;3087:1;3084;3077:12;3041:2;3107:62;3161:7;3152:6;3141:9;3137:22;3107:62;:::i;:::-;3097:72;;2982:193;2603:582;;;;;:::o;3192:263::-;;3307:2;3295:9;3286:7;3282:23;3278:32;3275:2;;;3323:1;3320;3313:12;3275:2;3358:1;3375:64;3431:7;3422:6;3411:9;3407:22;3375:64;:::i;:::-;3365:74;;3337:108;3269:186;;;;:::o;3463:237::-;;3606:88;3690:3;3682:6;3606:88;:::i;:::-;3592:102;;3585:115;;;;:::o;3771:1016::-;;3958:75;4027:5;3958:75;:::i;:::-;4046:107;4146:6;4141:3;4046:107;:::i;:::-;4039:114;;4176:3;4218:4;4210:6;4206:17;4201:3;4197:27;4245:77;4316:5;4245:77;:::i;:::-;4342:7;4370:1;4355:393;4380:6;4377:1;4374:13;4355:393;;;4442:9;4436:4;4432:20;4427:3;4420:33;4487:6;4481:13;4509:106;4610:4;4595:13;4509:106;:::i;:::-;4501:114;;4632:81;4706:6;4632:81;:::i;:::-;4622:91;;4736:4;4731:3;4727:14;4720:21;;4412:336;4402:1;4399;4395:9;4390:14;;4355:393;;;4359:14;4761:4;4754:11;;4778:3;4771:10;;3937:850;;;;;;;;;:::o;4795:110::-;4876:23;4893:5;4876:23;:::i;:::-;4871:3;4864:36;4858:47;;:::o;4912:113::-;4995:24;5013:5;4995:24;:::i;:::-;4990:3;4983:37;4977:48;;:::o;5032:152::-;5133:45;5153:24;5171:5;5153:24;:::i;:::-;5133:45;:::i;:::-;5128:3;5121:58;5115:69;;:::o;5191:343::-;;5301:38;5333:5;5301:38;:::i;:::-;5351:70;5414:6;5409:3;5351:70;:::i;:::-;5344:77;;5426:52;5471:6;5466:3;5459:4;5452:5;5448:16;5426:52;:::i;:::-;5499:29;5521:6;5499:29;:::i;:::-;5494:3;5490:39;5483:46;;5281:253;;;;;:::o;5541:356::-;;5669:38;5701:5;5669:38;:::i;:::-;5719:88;5800:6;5795:3;5719:88;:::i;:::-;5712:95;;5812:52;5857:6;5852:3;5845:4;5838:5;5834:16;5812:52;:::i;:::-;5885:6;5880:3;5876:16;5869:23;;5649:248;;;;;:::o;5904:142::-;5995:45;6034:5;5995:45;:::i;:::-;5990:3;5983:58;5977:69;;:::o;6053:327::-;;6155:39;6188:5;6155:39;:::i;:::-;6206:61;6260:6;6255:3;6206:61;:::i;:::-;6199:68;;6272:52;6317:6;6312:3;6305:4;6298:5;6294:16;6272:52;:::i;:::-;6345:29;6367:6;6345:29;:::i;:::-;6340:3;6336:39;6329:46;;6135:245;;;;;:::o;6387:347::-;;6499:39;6532:5;6499:39;:::i;:::-;6550:71;6614:6;6609:3;6550:71;:::i;:::-;6543:78;;6626:52;6671:6;6666:3;6659:4;6652:5;6648:16;6626:52;:::i;:::-;6699:29;6721:6;6699:29;:::i;:::-;6694:3;6690:39;6683:46;;6479:255;;;;;:::o;6741:360::-;;6871:39;6904:5;6871:39;:::i;:::-;6922:89;7004:6;6999:3;6922:89;:::i;:::-;6915:96;;7016:52;7061:6;7056:3;7049:4;7042:5;7038:16;7016:52;:::i;:::-;7089:6;7084:3;7080:16;7073:23;;6851:250;;;;;:::o;7133:793::-;;7242:5;7236:12;7276:1;7265:9;7261:17;7289:1;7284:238;;;;7533:1;7528:392;;;;7254:666;;7284:238;7362:4;7358:1;7347:9;7343:17;7339:28;7381:61;7435:6;7430:3;7381:61;:::i;:::-;7374:68;;7480:4;7476:9;7465;7461:25;7456:3;7449:38;7510:4;7505:3;7501:14;7494:21;;7291:231;7284:238;;7528:392;7597:1;7586:9;7582:17;7613:61;7667:6;7662:3;7613:61;:::i;:::-;7606:68;;7696:38;7728:5;7696:38;:::i;:::-;7750:1;7758:130;7772:6;7769:1;7766:13;7758:130;;;7837:7;7831:14;7827:1;7822:3;7818:11;7811:35;7878:1;7869:7;7865:15;7854:26;;7794:4;7791:1;7787:12;7782:17;;7758:130;;;7911:1;7906:3;7902:11;7895:18;;7535:385;;;7254:666;;7212:714;;;;;:::o;7935:327::-;;8095:67;8159:2;8154:3;8095:67;:::i;:::-;8088:74;;8195:29;8191:1;8186:3;8182:11;8175:50;8253:2;8248:3;8244:12;8237:19;;8081:181;;;:::o;8271:373::-;;8431:67;8495:2;8490:3;8431:67;:::i;:::-;8424:74;;8531:34;8527:1;8522:3;8518:11;8511:55;8600:6;8595:2;8590:3;8586:12;8579:28;8635:2;8630:3;8626:12;8619:19;;8417:227;;;:::o;8653:375::-;;8813:67;8877:2;8872:3;8813:67;:::i;:::-;8806:74;;8913:34;8909:1;8904:3;8900:11;8893:55;8982:8;8977:2;8972:3;8968:12;8961:30;9019:2;9014:3;9010:12;9003:19;;8799:229;;;:::o;9037:374::-;;9197:67;9261:2;9256:3;9197:67;:::i;:::-;9190:74;;9297:34;9293:1;9288:3;9284:11;9277:55;9366:7;9361:2;9356:3;9352:12;9345:29;9402:2;9397:3;9393:12;9386:19;;9183:228;;;:::o;9420:346::-;;9598:85;9680:2;9675:3;9598:85;:::i;:::-;9591:92;;9716:12;9712:1;9707:3;9703:11;9696:33;9757:2;9752:3;9748:12;9741:19;;9584:182;;;:::o;9775:383::-;;9935:67;9999:2;9994:3;9935:67;:::i;:::-;9928:74;;10035:34;10031:1;10026:3;10022:11;10015:55;10104:16;10099:2;10094:3;10090:12;10083:38;10149:2;10144:3;10140:12;10133:19;;9921:237;;;:::o;10167:400::-;;10327:67;10391:2;10386:3;10327:67;:::i;:::-;10320:74;;10427:34;10423:1;10418:3;10414:11;10407:55;10496:33;10491:2;10486:3;10482:12;10475:55;10558:2;10553:3;10549:12;10542:19;;10313:254;;;:::o;10576:338::-;;10754:84;10836:1;10831:3;10754:84;:::i;:::-;10747:91;;10871:6;10867:1;10862:3;10858:11;10851:27;10906:1;10901:3;10897:11;10890:18;;10740:174;;;:::o;10923:346::-;;11101:85;11183:2;11178:3;11101:85;:::i;:::-;11094:92;;11219:12;11215:1;11210:3;11206:11;11199:33;11260:2;11255:3;11251:12;11244:19;;11087:182;;;:::o;11334:550::-;;11467:4;11462:3;11458:14;11550:4;11543:5;11539:16;11533:23;11602:3;11596:4;11592:14;11585:4;11580:3;11576:14;11569:38;11622:73;11690:4;11676:12;11622:73;:::i;:::-;11614:81;;11487:220;11781:4;11774:5;11770:16;11764:23;11793:59;11846:4;11841:3;11837:14;11823:12;11793:59;:::i;:::-;11717:141;11875:4;11868:11;;11440:444;;;;;:::o;11948:631::-;;12088:4;12083:3;12079:14;12115:1;12183:4;12176:5;12172:16;12234:3;12228:4;12224:14;12217:4;12212:3;12208:14;12201:38;12254:70;12319:4;12305:12;12254:70;:::i;:::-;12246:78;;12126:210;12397:4;12390:5;12386:16;12380:23;12367:36;;12429:53;12472:9;12429:53;:::i;:::-;12488:59;12541:4;12536:3;12532:14;12518:12;12488:59;:::i;:::-;12346:207;12570:4;12563:11;;12061:518;;;;;;:::o;12586:113::-;12669:24;12687:5;12669:24;:::i;:::-;12664:3;12657:37;12651:48;;:::o;12706:97::-;12775:22;12791:5;12775:22;:::i;:::-;12770:3;12763:35;12757:46;;:::o;12810:253::-;;12938:75;13009:3;13000:6;12938:75;:::i;:::-;13035:2;13030:3;13026:12;13019:19;;13055:3;13048:10;;12926:137;;;;:::o;13070:271::-;;13223:93;13312:3;13303:6;13223:93;:::i;:::-;13216:100;;13333:3;13326:10;;13204:137;;;;:::o;13348:410::-;;13529:93;13618:3;13609:6;13529:93;:::i;:::-;13522:100;;13633:75;13704:3;13695:6;13633:75;:::i;:::-;13730:2;13725:3;13721:12;13714:19;;13750:3;13743:10;;13510:248;;;;;:::o;13765:724::-;;14038:93;14127:3;14118:6;14038:93;:::i;:::-;14031:100;;14149:93;14238:3;14229:6;14149:93;:::i;:::-;14142:100;;14253:75;14324:3;14315:6;14253:75;:::i;:::-;14350:2;14345:3;14341:12;14334:19;;14371:93;14460:3;14451:6;14371:93;:::i;:::-;14364:100;;14481:3;14474:10;;14019:470;;;;;;;:::o;14496:275::-;;14651:95;14742:3;14733:6;14651:95;:::i;:::-;14644:102;;14763:3;14756:10;;14632:139;;;;:::o;14778:414::-;;14961:95;15052:3;15043:6;14961:95;:::i;:::-;14954:102;;15067:75;15138:3;15129:6;15067:75;:::i;:::-;15164:2;15159:3;15155:12;15148:19;;15184:3;15177:10;;14942:250;;;;;:::o;15199:381::-;;15407:148;15551:3;15407:148;:::i;:::-;15400:155;;15572:3;15565:10;;15388:192;;;:::o;15587:381::-;;15795:148;15939:3;15795:148;:::i;:::-;15788:155;;15960:3;15953:10;;15776:192;;;:::o;15975:381::-;;16183:148;16327:3;16183:148;:::i;:::-;16176:155;;16348:3;16341:10;;16164:192;;;:::o;16363:454::-;;16582:2;16571:9;16567:18;16559:26;;16632:9;16626:4;16622:20;16618:1;16607:9;16603:17;16596:47;16657:150;16802:4;16793:6;16657:150;:::i;:::-;16649:158;;16553:264;;;;:::o;16824:218::-;;16949:2;16938:9;16934:18;16926:26;;16963:69;17029:1;17018:9;17014:17;17005:6;16963:69;:::i;:::-;16920:122;;;;:::o;17049:222::-;;17176:2;17165:9;17161:18;17153:26;;17190:71;17258:1;17247:9;17243:17;17234:6;17190:71;:::i;:::-;17147:124;;;;:::o;17278:744::-;;17535:3;17524:9;17520:19;17512:27;;17550:79;17626:1;17615:9;17611:17;17602:6;17550:79;:::i;:::-;17677:9;17671:4;17667:20;17662:2;17651:9;17647:18;17640:48;17702:78;17775:4;17766:6;17702:78;:::i;:::-;17694:86;;17828:9;17822:4;17818:20;17813:2;17802:9;17798:18;17791:48;17853:76;17924:4;17915:6;17853:76;:::i;:::-;17845:84;;17940:72;18008:2;17997:9;17993:18;17984:6;17940:72;:::i;:::-;17506:516;;;;;;;:::o;18029:310::-;;18176:2;18165:9;18161:18;18153:26;;18226:9;18220:4;18216:20;18212:1;18201:9;18197:17;18190:47;18251:78;18324:4;18315:6;18251:78;:::i;:::-;18243:86;;18147:192;;;;:::o;18346:421::-;;18521:2;18510:9;18506:18;18498:26;;18571:9;18565:4;18561:20;18557:1;18546:9;18542:17;18535:47;18596:78;18669:4;18660:6;18596:78;:::i;:::-;18588:86;;18685:72;18753:2;18742:9;18738:18;18729:6;18685:72;:::i;:::-;18492:275;;;;;:::o;18774:416::-;;18974:2;18963:9;18959:18;18951:26;;19024:9;19018:4;19014:20;19010:1;18999:9;18995:17;18988:47;19049:131;19175:4;19049:131;:::i;:::-;19041:139;;18945:245;;;:::o;19197:416::-;;19397:2;19386:9;19382:18;19374:26;;19447:9;19441:4;19437:20;19433:1;19422:9;19418:17;19411:47;19472:131;19598:4;19472:131;:::i;:::-;19464:139;;19368:245;;;:::o;19620:416::-;;19820:2;19809:9;19805:18;19797:26;;19870:9;19864:4;19860:20;19856:1;19845:9;19841:17;19834:47;19895:131;20021:4;19895:131;:::i;:::-;19887:139;;19791:245;;;:::o;20043:416::-;;20243:2;20232:9;20228:18;20220:26;;20293:9;20287:4;20283:20;20279:1;20268:9;20264:17;20257:47;20318:131;20444:4;20318:131;:::i;:::-;20310:139;;20214:245;;;:::o;20466:416::-;;20666:2;20655:9;20651:18;20643:26;;20716:9;20710:4;20706:20;20702:1;20691:9;20687:17;20680:47;20741:131;20867:4;20741:131;:::i;:::-;20733:139;;20637:245;;;:::o;20889:416::-;;21089:2;21078:9;21074:18;21066:26;;21139:9;21133:4;21129:20;21125:1;21114:9;21110:17;21103:47;21164:131;21290:4;21164:131;:::i;:::-;21156:139;;21060:245;;;:::o;21312:348::-;;21478:2;21467:9;21463:18;21455:26;;21528:9;21522:4;21518:20;21514:1;21503:9;21499:17;21492:47;21553:97;21645:4;21636:6;21553:97;:::i;:::-;21545:105;;21449:211;;;;:::o;21667:222::-;;21794:2;21783:9;21779:18;21771:26;;21808:71;21876:1;21865:9;21861:17;21852:6;21808:71;:::i;:::-;21765:124;;;;:::o;21896:256::-;;21958:2;21952:9;21942:19;;21996:4;21988:6;21984:17;22095:6;22083:10;22080:22;22059:18;22047:10;22044:34;22041:62;22038:2;;;22116:1;22113;22106:12;22038:2;22136:10;22132:2;22125:22;21936:216;;;;:::o;22159:321::-;;22302:18;22294:6;22291:30;22288:2;;;22334:1;22331;22324:12;22288:2;22401:4;22397:9;22390:4;22382:6;22378:17;22374:33;22366:41;;22465:4;22459;22455:15;22447:23;;22225:255;;;:::o;22487:322::-;;22631:18;22623:6;22620:30;22617:2;;;22663:1;22660;22653:12;22617:2;22730:4;22726:9;22719:4;22711:6;22707:17;22703:33;22695:41;;22794:4;22788;22784:15;22776:23;;22554:255;;;:::o;22816:172::-;;22923:3;22915:11;;22961:4;22956:3;22952:14;22944:22;;22909:79;;;:::o;22995:158::-;;23063:3;23055:11;;23100:3;23097:1;23090:14;23132:4;23129:1;23119:18;23111:26;;23049:104;;;:::o;23160:158::-;;23290:5;23284:12;23274:22;;23255:63;;;:::o;23325:121::-;;23418:5;23412:12;23402:22;;23383:63;;;:::o;23453:122::-;;23547:5;23541:12;23531:22;;23512:63;;;:::o;23582:129::-;;23701:4;23696:3;23692:14;23684:22;;23678:33;;;:::o;23719:199::-;;23870:6;23865:3;23858:19;23907:4;23902:3;23898:14;23883:29;;23851:67;;;;:::o;23927:162::-;;24041:6;24036:3;24029:19;24078:4;24073:3;24069:14;24054:29;;24022:67;;;;:::o;24098:144::-;;24233:3;24218:18;;24211:31;;;;:::o;24251:153::-;;24356:6;24351:3;24344:19;24393:4;24388:3;24384:14;24369:29;;24337:67;;;;:::o;24413:163::-;;24528:6;24523:3;24516:19;24565:4;24560:3;24556:14;24541:29;;24509:67;;;;:::o;24585:145::-;;24721:3;24706:18;;24699:31;;;;:::o;24738:94::-;;24822:4;24815:5;24811:16;24800:27;;24794:38;;;:::o;24839:91::-;;24901:24;24919:5;24901:24;:::i;:::-;24890:35;;24884:46;;;:::o;24937:144::-;;25009:66;25002:5;24998:78;24987:89;;24981:100;;;:::o;25088:72::-;;25150:5;25139:16;;25133:27;;;:::o;25167:121::-;;25240:42;25233:5;25229:54;25218:65;;25212:76;;;:::o;25295:72::-;;25357:5;25346:16;;25340:27;;;:::o;25374:81::-;;25445:4;25438:5;25434:16;25423:27;;25417:38;;;:::o;25462:116::-;;25549:24;25567:5;25549:24;:::i;:::-;25536:37;;25530:48;;;:::o;25586:145::-;25667:6;25662:3;25657;25644:30;25723:1;25714:6;25709:3;25705:16;25698:27;25637:94;;;:::o;25740:268::-;25805:1;25812:101;25826:6;25823:1;25820:13;25812:101;;;25902:1;25897:3;25893:11;25887:18;25883:1;25878:3;25874:11;25867:39;25848:2;25845:1;25841:10;25836:15;;25812:101;;;25928:6;25925:1;25922:13;25919:2;;;25993:1;25984:6;25979:3;25975:16;25968:27;25919:2;25789:219;;;;:::o;26016:157::-;;26104:64;26133:34;26156:10;26133:34;:::i;:::-;26104:64;:::i;:::-;26095:73;;26089:84;;;:::o;26180:74::-;;26244:5;26233:16;;26227:27;;;:::o;26261:97::-;;26349:2;26345:7;26340:2;26333:5;26329:14;26325:28;26315:38;;26309:49;;;:::o;26366:102::-;;26452:5;26449:1;26445:13;26423:35;;26417:51;;;:::o;26476:117::-;26545:24;26563:5;26545:24;:::i;:::-;26538:5;26535:35;26525:2;;26584:1;26581;26574:12;26525:2;26519:74;:::o;26600:117::-;26669:24;26687:5;26669:24;:::i;:::-;26662:5;26659:35;26649:2;;26708:1;26705;26698:12;26649:2;26643:74;:::o;26724:117::-;26793:24;26811:5;26793:24;:::i;:::-;26786:5;26783:35;26773:2;;26832:1;26829;26822:12;26773:2;26767:74;:::o",
  "source": "pragma solidity >= 0.6;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./ProvableAPI_0.6.sol\";\r\nimport \"./SafeMath.sol\";\r\nimport \"./Initializable.sol\";\r\n\r\n/// @title A game to get cards\r\n/// @author James\r\ncontract GachaGameV2 is usingProvable, Initializable {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    uint168 constant pullCost = 1000000000000000;\r\n    uint8 constant pullMinimum = 1;\r\n\r\n    struct Card {\r\n        string Name;\r\n        uint8 Value;\r\n    }\r\n\r\n    Card[] private currentCards;\r\n\r\n    mapping(string => Card) cards;\r\n    mapping(address => uint) balance;\r\n\r\n    event Pull(Card card);\r\n    bytes32 public queryId;\r\n\r\n    function initialize() public initializer payable {\r\n      provable_setProof(proofType_Ledger);\r\n      initCards();\r\n    }\r\n\r\n    modifier requireEnoughDeposit {\r\n        require(msg.value >= pullCost, \"0.001 Ether is the minimum requirement\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Get all cards that were pulled during the contracts lifetime\r\n    /// @dev Could change to a mapping to return the cards originating from the current user.\r\n    /// @return a list of cards\r\n    function getAllPulledCards() public view returns (Card[] memory) {\r\n        return currentCards;\r\n    }\r\n\r\n    /// @notice Add funds to the account\r\n    function pay() public requireEnoughDeposit payable {\r\n        balance[msg.sender] = balance[msg.sender].add(msg.value / pullCost);\r\n    }\r\n\r\n    /// @notice Retrieve cards\r\n    function pull() public requireEnoughDeposit payable {\r\n        require(msg.value / pullCost >= 1, \"You do not have enough funds to pull!\");\r\n        require(msg.value / pullCost <= 10, \"You are not allowed to pull more than 10 times in a single turn\");\r\n        balance[msg.sender] = balance[msg.sender].add(msg.value / pullCost);\r\n        uint count = balance[msg.sender];\r\n        require(count >= pullMinimum, \"You need to pull a minimum of 1 time\");\r\n\r\n        balance[msg.sender] = balance[msg.sender].sub(count);\r\n\r\n        for(uint i = 0; i < count; i++) {\r\n            queryId=provable_newRandomDSQuery(\r\n            0,          // QUERY_EXECUTION_DELAY\r\n            1,    // NUM_RANDOM_BYTES_REQUESTED\r\n            200000      // GAS_FOR_CALLBACK\r\n        );\r\n        }\r\n    }\r\n\r\n    /// @notice Check the current funds of the current account.\r\n    /// @return A value which represent the balance of the account\r\n    function checkBalance() public view returns (uint){\r\n        return balance[msg.sender];\r\n    }\r\n\r\n    function __callback(bytes32  _queryId,string memory _result,bytes memory _proof ) override public {\r\n        require(msg.sender == provable_cbAddress());\r\n        if (provable_randomDS_proofVerify__returnCode(_queryId,_result,_proof)== 0) {\r\n            gachaPull(uint256(keccak256(abi.encodePacked(_result))) % 200);\r\n        }\r\n    }\r\n\r\n    /// @notice Randomly select a card to return to the user and add it to the list of cards.\r\n    /// @param randomNumber A number which is used to determine the card to add to the list and give back to the user.\r\n    function gachaPull(uint randomNumber) private {\r\n        if (randomNumber > 25) {\r\n            currentCards.push(cards[\"Rare\"]);\r\n        } else if (randomNumber >= 5 && randomNumber <= 25) {\r\n            currentCards.push(cards[\"Super Rare\"]);\r\n        } else currentCards.push(cards[\"Ultra Rare\"]);\r\n\r\n        emit Pull(currentCards[currentCards.length - 1]);\r\n    }\r\n\r\n    /// @notice Load all possible cards that can get retrieved\r\n    function initCards() private {\r\n        cards[\"Rare\"] = Card({\r\n                Name: \"Rare\",\r\n                Value: 1\r\n        });\r\n        cards[\"Super Rare\"] = Card({\r\n                Name: \"Super Rare\",\r\n                Value: 3\r\n        });\r\n        cards[\"Ultra Rare\"] = Card({\r\n                Name: \"Ultra Rare\",\r\n                Value: 10\r\n        });\r\n    }\r\n\r\n    //function close() public {\r\n    //  selfdestruct(msg.sender);\r\n    //}\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/james/Desktop/TruffleTest/contracts/GameV2.sol",
  "ast": {
    "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/GameV2.sol",
    "exportedSymbols": {
      "GachaGameV2": [
        661
      ]
    },
    "id": 662,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 332,
        "literals": [
          "solidity",
          ">=",
          "0.6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 333,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:1"
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/ProvableAPI_0.6.sol",
        "file": "./ProvableAPI_0.6.sol",
        "id": 334,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 7185,
        "src": "62:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 7381,
        "src": "95:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 336,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 733,
        "src": "121:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 338,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7184,
              "src": "229:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7184",
                "typeString": "contract usingProvable"
              }
            },
            "id": 339,
            "nodeType": "InheritanceSpecifier",
            "src": "229:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 340,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 732,
              "src": "244:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$732",
                "typeString": "contract Initializable"
              }
            },
            "id": 341,
            "nodeType": "InheritanceSpecifier",
            "src": "244:13:1"
          }
        ],
        "contractDependencies": [
          732,
          7184
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 337,
          "nodeType": "StructuredDocumentation",
          "src": "154:51:1",
          "text": "@title A game to get cards\n @author James"
        },
        "fullyImplemented": true,
        "id": 661,
        "linearizedBaseContracts": [
          661,
          732,
          7184
        ],
        "name": "GachaGameV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 344,
            "libraryName": {
              "contractScope": null,
              "id": 342,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7380,
              "src": "273:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7380",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "267:27:1",
            "typeName": {
              "id": 343,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 347,
            "mutability": "constant",
            "name": "pullCost",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "302:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint168",
              "typeString": "uint168"
            },
            "typeName": {
              "id": 345,
              "name": "uint168",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint168",
                "typeString": "uint168"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030303030303030",
              "id": 346,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "330:16:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000_by_1",
                "typeString": "int_const 1000000000000000"
              },
              "value": "1000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 350,
            "mutability": "constant",
            "name": "pullMinimum",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "353:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 348,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "353:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "GachaGameV2.Card",
            "id": 355,
            "members": [
              {
                "constant": false,
                "id": 352,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 355,
                "src": "415:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 351,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 354,
                "mutability": "mutable",
                "name": "Value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 355,
                "src": "437:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 353,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "437:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 661,
            "src": "392:64:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 358,
            "mutability": "mutable",
            "name": "currentCards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "464:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
              "typeString": "struct GachaGameV2.Card[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 356,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 355,
                "src": "464:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                  "typeString": "struct GachaGameV2.Card"
                }
              },
              "id": 357,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "464:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage_ptr",
                "typeString": "struct GachaGameV2.Card[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 362,
            "mutability": "mutable",
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "500:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
              "typeString": "mapping(string => struct GachaGameV2.Card)"
            },
            "typeName": {
              "id": 361,
              "keyType": {
                "id": 359,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "508:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "500:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                "typeString": "mapping(string => struct GachaGameV2.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 360,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 355,
                "src": "518:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                  "typeString": "struct GachaGameV2.Card"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 366,
            "mutability": "mutable",
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "536:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 365,
              "keyType": {
                "id": 363,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "544:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "536:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 364,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "555:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 370,
            "name": "Pull",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 370,
                  "src": "588:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                    "typeString": "struct GachaGameV2.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 367,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 355,
                    "src": "588:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                      "typeString": "struct GachaGameV2.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "587:11:1"
            },
            "src": "577:22:1"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 372,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "605:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 371,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "685:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "712:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 377,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4926,
                      "src": "694:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "694:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 381,
                      "name": "initCards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "738:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:11:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "738:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 375,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "665:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "665:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:1"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:0:1"
            },
            "scope": 661,
            "src": "636:121:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "795:103:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "814:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "814:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "pullCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "827:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint168",
                            "typeString": "uint168"
                          }
                        },
                        "src": "814:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "302e30303120457468657220697320746865206d696e696d756d20726571756972656d656e74",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:40:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e96b2ea2ae5710fd711e0320bf6c77eaada2413e1d4a6a6bf238f08b1978767",
                          "typeString": "literal_string \"0.001 Ether is the minimum requirement\""
                        },
                        "value": "0.001 Ether is the minimum requirement"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e96b2ea2ae5710fd711e0320bf6c77eaada2413e1d4a6a6bf238f08b1978767",
                          "typeString": "literal_string \"0.001 Ether is the minimum requirement\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "806:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "806:72:1"
                },
                {
                  "id": 395,
                  "nodeType": "PlaceholderStatement",
                  "src": "889:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 397,
            "name": "requireEnoughDeposit",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:0:1"
            },
            "src": "765:133:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "1177:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 404,
                    "name": "currentCards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 358,
                    "src": "1195:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                      "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 405,
                  "nodeType": "Return",
                  "src": "1188:19:1"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "906:200:1",
              "text": "@notice Get all cards that were pulled during the contracts lifetime\n @dev Could change to a mapping to return the cards originating from the current user.\n @return a list of cards"
            },
            "functionSelector": "2eef3348",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPulledCards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:2:1"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 407,
                  "src": "1162:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Card_$355_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GachaGameV2.Card[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 400,
                      "name": "Card",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 355,
                      "src": "1162:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                        "typeString": "struct GachaGameV2.Card"
                      }
                    },
                    "id": 401,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1162:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage_ptr",
                      "typeString": "struct GachaGameV2.Card[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:15:1"
            },
            "scope": 661,
            "src": "1112:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "1316:86:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1327:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 416,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1335:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1335:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1327:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 422,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1373:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1373:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1385:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1373:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1349:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 420,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1357:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1357:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1349:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7213,
                        "src": "1349:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1349:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1327:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:67:1"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "1223:36:1",
              "text": "@notice Add funds to the account"
            },
            "functionSelector": "1b9265b8",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 410,
                  "name": "requireEnoughDeposit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "1287:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1287:20:1"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:2:1"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:1"
            },
            "scope": 661,
            "src": "1265:137:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "1494:733:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 437,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1513:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1513:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 439,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1525:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1513:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1513:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f206e6f74206861766520656e6f7567682066756e647320746f2070756c6c21",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4622a6a03270c2103f9d7e3c7013054c19ddc22cc7c1d8fb7b19b18f332d0d07",
                          "typeString": "literal_string \"You do not have enough funds to pull!\""
                        },
                        "value": "You do not have enough funds to pull!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4622a6a03270c2103f9d7e3c7013054c19ddc22cc7c1d8fb7b19b18f332d0d07",
                          "typeString": "literal_string \"You do not have enough funds to pull!\""
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1505:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1599:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1599:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 449,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1611:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1599:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1623:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1599:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206e6f7420616c6c6f77656420746f2070756c6c206d6f7265207468616e2031302074696d657320696e20612073696e676c65207475726e",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:65:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b803e5cd73cbd531183529becdc867453887ed5ff0f29ea2fcedfe3a26beb2f4",
                          "typeString": "literal_string \"You are not allowed to pull more than 10 times in a single turn\""
                        },
                        "value": "You are not allowed to pull more than 10 times in a single turn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b803e5cd73cbd531183529becdc867453887ed5ff0f29ea2fcedfe3a26beb2f4",
                          "typeString": "literal_string \"You are not allowed to pull more than 10 times in a single turn\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1591:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1704:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1712:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1712:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1704:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 465,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1750:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1750:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1762:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1750:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 460,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1726:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 463,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1734:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1734:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1726:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7213,
                        "src": "1726:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1726:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1704:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:67:1"
                },
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "count",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 519,
                      "src": "1782:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1782:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1795:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 477,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1803:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1803:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1795:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1782:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 480,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 473,
                          "src": "1833:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 481,
                          "name": "pullMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "1842:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1833:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2070756c6c2061206d696e696d756d206f6620312074696d65",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3108e5c2daa72c34533881b69cab842421483af2824c93d2232fc8cd7aab6962",
                          "typeString": "literal_string \"You need to pull a minimum of 1 time\""
                        },
                        "value": "You need to pull a minimum of 1 time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3108e5c2daa72c34533881b69cab842421483af2824c93d2232fc8cd7aab6962",
                          "typeString": "literal_string \"You need to pull a minimum of 1 time\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1825:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1907:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1915:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1915:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1907:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 473,
                          "src": "1953:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 490,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1929:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1937:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1937:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1929:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7230,
                        "src": "1929:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1929:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:52:1"
                },
                {
                  "body": {
                    "id": 517,
                    "nodeType": "Block",
                    "src": "2004:216:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 509,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "2019:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2067:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2117:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "323030303030",
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2166:6:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                },
                                "value": "200000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                }
                              ],
                              "id": 510,
                              "name": "provable_newRandomDSQuery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6259,
                              "src": "2027:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2027:181:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2019:189:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 516,
                        "nodeType": "ExpressionStatement",
                        "src": "2019:189:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "1988:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1992:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1988:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 518,
                  "initializationExpression": {
                    "assignments": [
                      500
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 518,
                        "src": "1976:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1976:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 502,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1985:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1976:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1999:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 506,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "1999:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 508,
                    "nodeType": "ExpressionStatement",
                    "src": "1999:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1972:248:1"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "1410:26:1",
              "text": "@notice Retrieve cards"
            },
            "functionSelector": "329eb839",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 434,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 433,
                  "name": "requireEnoughDeposit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "1465:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1465:20:1"
              }
            ],
            "name": "pull",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:2:1"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:1"
            },
            "scope": 661,
            "src": "1442:785:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "2418:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2436:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2444:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2444:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2436:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "2429:26:1"
                }
              ]
            },
            "documentation": {
              "id": 521,
              "nodeType": "StructuredDocumentation",
              "src": "2235:127:1",
              "text": "@notice Check the current funds of the current account.\n @return A value which represent the balance of the account"
            },
            "functionSelector": "c71daccb",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:1"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "2413:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2412:6:1"
            },
            "scope": 661,
            "src": "2368:95:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1844
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "2569:237:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2588:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2588:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 545,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4938,
                            "src": "2602:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2602:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2588:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2580:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:43:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "2680:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 552,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "2689:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 553,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "2697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 550,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6682,
                        "src": "2638:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2638:66:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2707:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2638:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 572,
                  "nodeType": "IfStatement",
                  "src": "2634:165:1",
                  "trueBody": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "2710:89:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 563,
                                            "name": "_result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 536,
                                            "src": "2770:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 561,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "2753:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 562,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "2753:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2753:25:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 560,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "2743:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2743:36:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2735:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 558,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2735:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2735:45:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2783:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "2735:51:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 557,
                            "name": "gachaPull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "2725:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2725:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "2725:62:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 540,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2553:8:1"
            },
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2491:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2509:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2531:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2490:62:1"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:0:1"
            },
            "scope": 661,
            "src": "2471:335:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "3075:322:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 580,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "3090:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3235",
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3105:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "src": "3090:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "3178:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3194:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3178:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 595,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "3199:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3235",
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3215:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "3199:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3178:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "cards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "3308:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                              }
                            },
                            "id": 613,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "556c7472612052617265",
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3314:12:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                                "typeString": "literal_string \"Ultra Rare\""
                              },
                              "value": "Ultra Rare"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3308:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$355_storage",
                              "typeString": "struct GachaGameV2.Card storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Card_$355_storage",
                              "typeString": "struct GachaGameV2.Card storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 608,
                            "name": "currentCards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "3290:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                              "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3290:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                            "typeString": "function (struct GachaGameV2.Card storage ref)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3290:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 615,
                      "nodeType": "ExpressionStatement",
                      "src": "3290:38:1"
                    },
                    "id": 616,
                    "nodeType": "IfStatement",
                    "src": "3174:154:1",
                    "trueBody": {
                      "id": 607,
                      "nodeType": "Block",
                      "src": "3219:65:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 602,
                                  "name": "cards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 362,
                                  "src": "3252:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                    "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                                  }
                                },
                                "id": 604,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "53757065722052617265",
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3258:12:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                                    "typeString": "literal_string \"Super Rare\""
                                  },
                                  "value": "Super Rare"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3252:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Card_$355_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Card_$355_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 599,
                                "name": "currentCards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "3234:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                                }
                              },
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3234:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                                "typeString": "function (struct GachaGameV2.Card storage ref)"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 606,
                          "nodeType": "ExpressionStatement",
                          "src": "3234:38:1"
                        }
                      ]
                    }
                  },
                  "id": 617,
                  "nodeType": "IfStatement",
                  "src": "3086:242:1",
                  "trueBody": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "3109:59:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 586,
                                "name": "cards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "3142:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                  "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                                }
                              },
                              "id": 588,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "52617265",
                                "id": 587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3148:6:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                                  "typeString": "literal_string \"Rare\""
                                },
                                "value": "Rare"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3142:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Card_$355_storage",
                                "typeString": "struct GachaGameV2.Card storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Card_$355_storage",
                                "typeString": "struct GachaGameV2.Card storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 583,
                              "name": "currentCards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3124:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3124:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                              "typeString": "function (struct GachaGameV2.Card storage ref)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3124:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "3124:32:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 619,
                          "name": "currentCards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3351:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                            "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 620,
                              "name": "currentCards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3364:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3364:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3386:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3364:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3351:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$355_storage",
                          "typeString": "struct GachaGameV2.Card storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Card_$355_storage",
                          "typeString": "struct GachaGameV2.Card storage ref"
                        }
                      ],
                      "id": 618,
                      "name": "Pull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "3346:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Card_$355_memory_ptr_$returns$__$",
                        "typeString": "function (struct GachaGameV2.Card memory)"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "EmitStatement",
                  "src": "3341:48:1"
                }
              ]
            },
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "2814:209:1",
              "text": "@notice Randomly select a card to return to the user and add it to the list of cards.\n @param randomNumber A number which is used to determine the card to add to the list and give back to the user."
            },
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "gachaPull",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 628,
                  "src": "3048:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3047:19:1"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3075:0:1"
            },
            "scope": 661,
            "src": "3029:368:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3498:339:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3509:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 634,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "52617265",
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3515:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                          "typeString": "literal_string \"Rare\""
                        },
                        "value": "Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3509:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "52617265",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3555:6:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                            "typeString": "literal_string \"Rare\""
                          },
                          "value": "Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3587:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                            "typeString": "literal_string \"Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 635,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3525:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3525:75:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3509:91:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:91:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 641,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3611:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "53757065722052617265",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                          "typeString": "literal_string \"Super Rare\""
                        },
                        "value": "Super Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3611:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "53757065722052617265",
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3663:12:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                            "typeString": "literal_string \"Super Rare\""
                          },
                          "value": "Super Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3701:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                            "typeString": "literal_string \"Super Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 644,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3633:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3633:81:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3611:103:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:103:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3725:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "556c7472612052617265",
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3731:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                          "typeString": "literal_string \"Ultra Rare\""
                        },
                        "value": "Ultra Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3725:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "556c7472612052617265",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:12:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                            "typeString": "literal_string \"Ultra Rare\""
                          },
                          "value": "Ultra Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3815:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                            "typeString": "literal_string \"Ultra Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 653,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3747:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3747:82:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3725:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:104:1"
                }
              ]
            },
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "3405:58:1",
              "text": "@notice Load all possible cards that can get retrieved"
            },
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initCards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:2:1"
            },
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:0:1"
            },
            "scope": 661,
            "src": "3469:368:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 662,
        "src": "205:3716:1"
      }
    ],
    "src": "0:3923:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/GameV2.sol",
    "exportedSymbols": {
      "GachaGameV2": [
        661
      ]
    },
    "id": 662,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 332,
        "literals": [
          "solidity",
          ">=",
          "0.6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 333,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:1"
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/ProvableAPI_0.6.sol",
        "file": "./ProvableAPI_0.6.sol",
        "id": 334,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 7185,
        "src": "62:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 335,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 7381,
        "src": "95:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/james/Desktop/TruffleTest/contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 336,
        "nodeType": "ImportDirective",
        "scope": 662,
        "sourceUnit": 733,
        "src": "121:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 338,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7184,
              "src": "229:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7184",
                "typeString": "contract usingProvable"
              }
            },
            "id": 339,
            "nodeType": "InheritanceSpecifier",
            "src": "229:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 340,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 732,
              "src": "244:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$732",
                "typeString": "contract Initializable"
              }
            },
            "id": 341,
            "nodeType": "InheritanceSpecifier",
            "src": "244:13:1"
          }
        ],
        "contractDependencies": [
          732,
          7184
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 337,
          "nodeType": "StructuredDocumentation",
          "src": "154:51:1",
          "text": "@title A game to get cards\n @author James"
        },
        "fullyImplemented": true,
        "id": 661,
        "linearizedBaseContracts": [
          661,
          732,
          7184
        ],
        "name": "GachaGameV2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 344,
            "libraryName": {
              "contractScope": null,
              "id": 342,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7380,
              "src": "273:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$7380",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "267:27:1",
            "typeName": {
              "id": 343,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 347,
            "mutability": "constant",
            "name": "pullCost",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "302:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint168",
              "typeString": "uint168"
            },
            "typeName": {
              "id": 345,
              "name": "uint168",
              "nodeType": "ElementaryTypeName",
              "src": "302:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint168",
                "typeString": "uint168"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31303030303030303030303030303030",
              "id": 346,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "330:16:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000_by_1",
                "typeString": "int_const 1000000000000000"
              },
              "value": "1000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 350,
            "mutability": "constant",
            "name": "pullMinimum",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "353:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 348,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "353:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 349,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "382:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "GachaGameV2.Card",
            "id": 355,
            "members": [
              {
                "constant": false,
                "id": 352,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 355,
                "src": "415:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 351,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "415:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 354,
                "mutability": "mutable",
                "name": "Value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 355,
                "src": "437:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 353,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "437:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 661,
            "src": "392:64:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 358,
            "mutability": "mutable",
            "name": "currentCards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "464:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
              "typeString": "struct GachaGameV2.Card[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 356,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 355,
                "src": "464:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                  "typeString": "struct GachaGameV2.Card"
                }
              },
              "id": 357,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "464:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage_ptr",
                "typeString": "struct GachaGameV2.Card[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 362,
            "mutability": "mutable",
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "500:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
              "typeString": "mapping(string => struct GachaGameV2.Card)"
            },
            "typeName": {
              "id": 361,
              "keyType": {
                "id": 359,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "508:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "500:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                "typeString": "mapping(string => struct GachaGameV2.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 360,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 355,
                "src": "518:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                  "typeString": "struct GachaGameV2.Card"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 366,
            "mutability": "mutable",
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "536:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 365,
              "keyType": {
                "id": 363,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "544:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "536:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 364,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "555:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 370,
            "name": "Pull",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 370,
                  "src": "588:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                    "typeString": "struct GachaGameV2.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 367,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 355,
                    "src": "588:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                      "typeString": "struct GachaGameV2.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "587:11:1"
            },
            "src": "577:22:1"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 372,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 661,
            "src": "605:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 371,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "605:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "685:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "712:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 377,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4926,
                      "src": "694:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "694:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 381,
                      "name": "initCards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "738:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:11:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "738:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8129fc1c",
            "id": 385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 375,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 374,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 709,
                  "src": "665:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "665:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:1"
            },
            "returnParameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:0:1"
            },
            "scope": 661,
            "src": "636:121:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 396,
              "nodeType": "Block",
              "src": "795:103:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "814:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "814:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "pullCost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "827:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint168",
                            "typeString": "uint168"
                          }
                        },
                        "src": "814:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "302e30303120457468657220697320746865206d696e696d756d20726571756972656d656e74",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:40:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e96b2ea2ae5710fd711e0320bf6c77eaada2413e1d4a6a6bf238f08b1978767",
                          "typeString": "literal_string \"0.001 Ether is the minimum requirement\""
                        },
                        "value": "0.001 Ether is the minimum requirement"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e96b2ea2ae5710fd711e0320bf6c77eaada2413e1d4a6a6bf238f08b1978767",
                          "typeString": "literal_string \"0.001 Ether is the minimum requirement\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "806:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "806:72:1"
                },
                {
                  "id": 395,
                  "nodeType": "PlaceholderStatement",
                  "src": "889:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 397,
            "name": "requireEnoughDeposit",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:0:1"
            },
            "src": "765:133:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "1177:38:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 404,
                    "name": "currentCards",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 358,
                    "src": "1195:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                      "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 405,
                  "nodeType": "Return",
                  "src": "1188:19:1"
                }
              ]
            },
            "documentation": {
              "id": 398,
              "nodeType": "StructuredDocumentation",
              "src": "906:200:1",
              "text": "@notice Get all cards that were pulled during the contracts lifetime\n @dev Could change to a mapping to return the cards originating from the current user.\n @return a list of cards"
            },
            "functionSelector": "2eef3348",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPulledCards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:2:1"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 407,
                  "src": "1162:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Card_$355_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct GachaGameV2.Card[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 400,
                      "name": "Card",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 355,
                      "src": "1162:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage_ptr",
                        "typeString": "struct GachaGameV2.Card"
                      }
                    },
                    "id": 401,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1162:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage_ptr",
                      "typeString": "struct GachaGameV2.Card[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:15:1"
            },
            "scope": 661,
            "src": "1112:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 429,
              "nodeType": "Block",
              "src": "1316:86:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 413,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1327:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 416,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1335:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1335:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1327:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 422,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1373:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1373:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 424,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1385:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1373:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1349:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 420,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1357:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1357:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1349:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7213,
                        "src": "1349:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1349:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1327:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:67:1"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "1223:36:1",
              "text": "@notice Add funds to the account"
            },
            "functionSelector": "1b9265b8",
            "id": 430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 410,
                  "name": "requireEnoughDeposit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "1287:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1287:20:1"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:2:1"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1316:0:1"
            },
            "scope": 661,
            "src": "1265:137:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "1494:733:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 437,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1513:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1513:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 439,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1525:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1513:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1537:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1513:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520646f206e6f74206861766520656e6f7567682066756e647320746f2070756c6c21",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4622a6a03270c2103f9d7e3c7013054c19ddc22cc7c1d8fb7b19b18f332d0d07",
                          "typeString": "literal_string \"You do not have enough funds to pull!\""
                        },
                        "value": "You do not have enough funds to pull!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4622a6a03270c2103f9d7e3c7013054c19ddc22cc7c1d8fb7b19b18f332d0d07",
                          "typeString": "literal_string \"You do not have enough funds to pull!\""
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1505:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:75:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1599:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1599:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 449,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1611:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1599:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1623:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "1599:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206e6f7420616c6c6f77656420746f2070756c6c206d6f7265207468616e2031302074696d657320696e20612073696e676c65207475726e",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:65:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b803e5cd73cbd531183529becdc867453887ed5ff0f29ea2fcedfe3a26beb2f4",
                          "typeString": "literal_string \"You are not allowed to pull more than 10 times in a single turn\""
                        },
                        "value": "You are not allowed to pull more than 10 times in a single turn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b803e5cd73cbd531183529becdc867453887ed5ff0f29ea2fcedfe3a26beb2f4",
                          "typeString": "literal_string \"You are not allowed to pull more than 10 times in a single turn\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1591:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:102:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:102:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1704:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1712:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1712:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1704:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 465,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1750:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1750:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 467,
                            "name": "pullCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1762:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint168",
                              "typeString": "uint168"
                            }
                          },
                          "src": "1750:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 460,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1726:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 463,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 461,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1734:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1734:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1726:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7213,
                        "src": "1726:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1726:45:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1704:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:67:1"
                },
                {
                  "assignments": [
                    473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "count",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 519,
                      "src": "1782:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1782:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 474,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "1795:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 477,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1803:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1803:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1795:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1782:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 480,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 473,
                          "src": "1833:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 481,
                          "name": "pullMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "1842:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1833:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2070756c6c2061206d696e696d756d206f6620312074696d65",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1855:38:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3108e5c2daa72c34533881b69cab842421483af2824c93d2232fc8cd7aab6962",
                          "typeString": "literal_string \"You need to pull a minimum of 1 time\""
                        },
                        "value": "You need to pull a minimum of 1 time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3108e5c2daa72c34533881b69cab842421483af2824c93d2232fc8cd7aab6962",
                          "typeString": "literal_string \"You need to pull a minimum of 1 time\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1825:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 486,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1907:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 489,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1915:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1915:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1907:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 473,
                          "src": "1953:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 490,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1929:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1937:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1937:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1929:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7230,
                        "src": "1929:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1929:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:52:1"
                },
                {
                  "body": {
                    "id": 517,
                    "nodeType": "Block",
                    "src": "2004:216:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 509,
                            "name": "queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "2019:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2067:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2117:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "323030303030",
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2166:6:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                },
                                "value": "200000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_rational_200000_by_1",
                                  "typeString": "int_const 200000"
                                }
                              ],
                              "id": 510,
                              "name": "provable_newRandomDSQuery",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6259,
                              "src": "2027:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2027:181:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2019:189:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 516,
                        "nodeType": "ExpressionStatement",
                        "src": "2019:189:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "1988:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1992:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1988:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 518,
                  "initializationExpression": {
                    "assignments": [
                      500
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 518,
                        "src": "1976:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1976:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 502,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1985:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1976:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1999:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 506,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "1999:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 508,
                    "nodeType": "ExpressionStatement",
                    "src": "1999:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1972:248:1"
                }
              ]
            },
            "documentation": {
              "id": 431,
              "nodeType": "StructuredDocumentation",
              "src": "1410:26:1",
              "text": "@notice Retrieve cards"
            },
            "functionSelector": "329eb839",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 434,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 433,
                  "name": "requireEnoughDeposit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 397,
                  "src": "1465:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1465:20:1"
              }
            ],
            "name": "pull",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:2:1"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1494:0:1"
            },
            "scope": 661,
            "src": "1442:785:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "2418:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 526,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2436:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 529,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2444:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2444:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2436:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "2429:26:1"
                }
              ]
            },
            "documentation": {
              "id": 521,
              "nodeType": "StructuredDocumentation",
              "src": "2235:127:1",
              "text": "@notice Check the current funds of the current account.\n @return A value which represent the balance of the account"
            },
            "functionSelector": "c71daccb",
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:1"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 532,
                  "src": "2413:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2413:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2412:6:1"
            },
            "scope": 661,
            "src": "2368:95:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1844
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "2569:237:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2588:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2588:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 545,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4938,
                            "src": "2602:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2602:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2588:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2580:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "2580:43:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "2680:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 552,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "2689:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 553,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "2697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 550,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6682,
                        "src": "2638:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2638:66:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2707:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2638:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 572,
                  "nodeType": "IfStatement",
                  "src": "2634:165:1",
                  "trueBody": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "2710:89:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 563,
                                            "name": "_result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 536,
                                            "src": "2770:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 561,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "2753:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 562,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "2753:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2753:25:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 560,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "2743:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2743:36:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2735:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 558,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2735:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2735:45:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "323030",
                                "id": 567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2783:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_200_by_1",
                                  "typeString": "int_const 200"
                                },
                                "value": "200"
                              },
                              "src": "2735:51:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 557,
                            "name": "gachaPull",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "2725:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2725:62:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "2725:62:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 540,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2553:8:1"
            },
            "parameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2491:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2509:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 574,
                  "src": "2531:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 537,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2490:62:1"
            },
            "returnParameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:0:1"
            },
            "scope": 661,
            "src": "2471:335:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 627,
              "nodeType": "Block",
              "src": "3075:322:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 580,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "3090:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3235",
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3105:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "src": "3090:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "3178:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3194:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "3178:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 595,
                          "name": "randomNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "3199:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3235",
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3215:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25_by_1",
                            "typeString": "int_const 25"
                          },
                          "value": "25"
                        },
                        "src": "3199:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "3178:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 611,
                              "name": "cards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "3308:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                              }
                            },
                            "id": 613,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "556c7472612052617265",
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3314:12:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                                "typeString": "literal_string \"Ultra Rare\""
                              },
                              "value": "Ultra Rare"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3308:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$355_storage",
                              "typeString": "struct GachaGameV2.Card storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Card_$355_storage",
                              "typeString": "struct GachaGameV2.Card storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 608,
                            "name": "currentCards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 358,
                            "src": "3290:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                              "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3290:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                            "typeString": "function (struct GachaGameV2.Card storage ref)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3290:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 615,
                      "nodeType": "ExpressionStatement",
                      "src": "3290:38:1"
                    },
                    "id": 616,
                    "nodeType": "IfStatement",
                    "src": "3174:154:1",
                    "trueBody": {
                      "id": 607,
                      "nodeType": "Block",
                      "src": "3219:65:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 602,
                                  "name": "cards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 362,
                                  "src": "3252:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                    "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                                  }
                                },
                                "id": 604,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "53757065722052617265",
                                  "id": 603,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3258:12:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                                    "typeString": "literal_string \"Super Rare\""
                                  },
                                  "value": "Super Rare"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3252:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Card_$355_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Card_$355_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 599,
                                "name": "currentCards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "3234:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                  "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                                }
                              },
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3234:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                                "typeString": "function (struct GachaGameV2.Card storage ref)"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 606,
                          "nodeType": "ExpressionStatement",
                          "src": "3234:38:1"
                        }
                      ]
                    }
                  },
                  "id": 617,
                  "nodeType": "IfStatement",
                  "src": "3086:242:1",
                  "trueBody": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "3109:59:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 586,
                                "name": "cards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "3142:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                                  "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                                }
                              },
                              "id": 588,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "52617265",
                                "id": 587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3148:6:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                                  "typeString": "literal_string \"Rare\""
                                },
                                "value": "Rare"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3142:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Card_$355_storage",
                                "typeString": "struct GachaGameV2.Card storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Card_$355_storage",
                                "typeString": "struct GachaGameV2.Card storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 583,
                              "name": "currentCards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3124:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3124:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$355_storage_$returns$__$",
                              "typeString": "function (struct GachaGameV2.Card storage ref)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3124:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "3124:32:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 619,
                          "name": "currentCards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "3351:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                            "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                          }
                        },
                        "id": 624,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 620,
                              "name": "currentCards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3364:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Card_$355_storage_$dyn_storage",
                                "typeString": "struct GachaGameV2.Card storage ref[] storage ref"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3364:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3386:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3364:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3351:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$355_storage",
                          "typeString": "struct GachaGameV2.Card storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Card_$355_storage",
                          "typeString": "struct GachaGameV2.Card storage ref"
                        }
                      ],
                      "id": 618,
                      "name": "Pull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "3346:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Card_$355_memory_ptr_$returns$__$",
                        "typeString": "function (struct GachaGameV2.Card memory)"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "EmitStatement",
                  "src": "3341:48:1"
                }
              ]
            },
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "2814:209:1",
              "text": "@notice Randomly select a card to return to the user and add it to the list of cards.\n @param randomNumber A number which is used to determine the card to add to the list and give back to the user."
            },
            "id": 628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "gachaPull",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 628,
                  "src": "3048:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3048:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3047:19:1"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3075:0:1"
            },
            "scope": 661,
            "src": "3029:368:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3498:339:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 632,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3509:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 634,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "52617265",
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3515:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                          "typeString": "literal_string \"Rare\""
                        },
                        "value": "Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3509:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "52617265",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3555:6:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                            "typeString": "literal_string \"Rare\""
                          },
                          "value": "Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3587:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d02e3141a8e0af092cd3cce39f1f91e61e81a816e83e58a487f98f6c3b238dfa",
                            "typeString": "literal_string \"Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 635,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3525:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3525:75:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3509:91:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "3509:91:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 641,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3611:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "53757065722052617265",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                          "typeString": "literal_string \"Super Rare\""
                        },
                        "value": "Super Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3611:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "53757065722052617265",
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3663:12:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                            "typeString": "literal_string \"Super Rare\""
                          },
                          "value": "Super Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3701:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_f1d654d2c7eaaee434eb5a13cb16243b5f896ab4bef674a4008806180e1a0848",
                            "typeString": "literal_string \"Super Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 644,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3633:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3633:81:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3611:103:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:103:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "cards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3725:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Card_$355_storage_$",
                          "typeString": "mapping(string memory => struct GachaGameV2.Card storage ref)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "556c7472612052617265",
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3731:12:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                          "typeString": "literal_string \"Ultra Rare\""
                        },
                        "value": "Ultra Rare"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3725:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_storage",
                        "typeString": "struct GachaGameV2.Card storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "556c7472612052617265",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:12:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                            "typeString": "literal_string \"Ultra Rare\""
                          },
                          "value": "Ultra Rare"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3815:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_764585fd555e92a4c5267e0e5392100f949694952f299854952eef39803e94aa",
                            "typeString": "literal_string \"Ultra Rare\""
                          },
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 653,
                        "name": "Card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3747:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Card_$355_storage_ptr_$",
                          "typeString": "type(struct GachaGameV2.Card storage pointer)"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "Name",
                        "Value"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3747:82:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$355_memory_ptr",
                        "typeString": "struct GachaGameV2.Card memory"
                      }
                    },
                    "src": "3725:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$355_storage",
                      "typeString": "struct GachaGameV2.Card storage ref"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:104:1"
                }
              ]
            },
            "documentation": {
              "id": 629,
              "nodeType": "StructuredDocumentation",
              "src": "3405:58:1",
              "text": "@notice Load all possible cards that can get retrieved"
            },
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initCards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:2:1"
            },
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3498:0:1"
            },
            "scope": 661,
            "src": "3469:368:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 662,
        "src": "205:3716:1"
      }
    ],
    "src": "0:3923:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x6ee21981be617443567eeac157be22928d3cfa41c453eb6c666eff8cd650fa4f": {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "Name",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "Value",
                  "type": "uint8"
                }
              ],
              "indexed": false,
              "internalType": "struct GachaGameV2.Card",
              "name": "card",
              "type": "tuple"
            }
          ],
          "name": "Pull",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1F7dee8df972bfFA9984499A17848D473cA37E11"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-04T21:49:25.830Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "James",
    "kind": "dev",
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings."
      },
      "checkBalance()": {
        "returns": {
          "_0": "A value which represent the balance of the account"
        }
      },
      "getAllPulledCards()": {
        "details": "Could change to a mapping to return the cards originating from the current user.",
        "returns": {
          "_0": "a list of cards"
        }
      }
    },
    "title": "A game to get cards",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkBalance()": {
        "notice": "Check the current funds of the current account."
      },
      "getAllPulledCards()": {
        "notice": "Get all cards that were pulled during the contracts lifetime"
      },
      "pay()": {
        "notice": "Add funds to the account"
      },
      "pull()": {
        "notice": "Retrieve cards"
      }
    },
    "version": 1
  }
}